{"version":3,"file":"callout.js","sourceRoot":"","sources":["../../../../src/components/callout/callout.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCASsB;AACtB,uCAAkC;AAClC,uCAA8C;AAwC9C,MAAa,OAAQ,SAAQ,+BAAoC;IACtD,MAAM,CAAC,WAAW,GAAG,GAAG,2BAAkB,UAAU,CAAC;IAErD,MAAM;QACT,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9E,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,MAAM,OAAO,GAAG,IAAA,oBAAU,EACtB,gBAAO,CAAC,OAAO,EACf,gBAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAC3B,EAAE,CAAC,gBAAO,CAAC,YAAY,CAAC,EAAE,QAAQ,IAAI,IAAI,EAAE,EAC5C,SAAS,CACZ,CAAC;QAEF,OAAO,CACH,6BAAK,SAAS,EAAE,OAAO,KAAM,SAAS;YACjC,QAAQ,IAAI,oBAAC,WAAI,IAAC,IAAI,EAAE,QAAQ,iBAAe,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,GAAI;YACrE,KAAK,IAAI,oBAAC,SAAE,QAAE,KAAK,CAAM;YACzB,QAAQ,CACP,CACT,CAAC;IACN,CAAC;IAEO,WAAW,CAAC,IAA2B,EAAE,MAAe;QAE5D,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,OAAO,SAAS,CAAC;SACpB;QAED,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,OAAO,IAAI,CAAC;SACf;QAED,QAAQ,MAAM,EAAE;YACZ,KAAK,eAAM,CAAC,MAAM;gBACd,OAAO,OAAO,CAAC;YACnB,KAAK,eAAM,CAAC,OAAO;gBACf,OAAO,WAAW,CAAC;YACvB,KAAK,eAAM,CAAC,OAAO;gBACf,OAAO,cAAc,CAAC;YAC1B,KAAK,eAAM,CAAC,OAAO;gBACf,OAAO,MAAM,CAAC;YAClB;gBACI,OAAO,SAAS,CAAC;SACxB;IACL,CAAC;;AA5CL,0BA6CC","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    AbstractPureComponent2,\n    Classes,\n    DISPLAYNAME_PREFIX,\n    HTMLDivProps,\n    Intent,\n    IntentProps,\n    MaybeElement,\n    Props,\n} from \"../../common\";\nimport { H5 } from \"../html/html\";\nimport { Icon, IconName } from \"../icon/icon\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type CalloutProps = ICalloutProps;\n/** @deprecated use CalloutProps */\nexport interface ICalloutProps extends IntentProps, Props, HTMLDivProps {\n    /** Callout contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render on the left side.\n     *\n     * If this prop is omitted or `undefined`, the `intent` prop will determine a default icon.\n     * If this prop is explicitly `null`, no icon will be displayed (regardless of `intent`).\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Visual intent color to apply to background, title, and icon.\n     *\n     * Defining this prop also applies a default icon, if the `icon` prop is omitted.\n     */\n    intent?: Intent;\n\n    /**\n     * String content of optional title element.\n     *\n     * Due to a conflict with the HTML prop types, to provide JSX content simply\n     * pass `<H4>JSX title content</H4>` as first `children` element instead of\n     * using this prop (note uppercase tag name to use the Blueprint Heading\n     * component).\n     */\n    title?: string;\n}\n\n/**\n * Callout component.\n *\n * @see https://blueprintjs.com/docs/#core/components/callout\n */\nexport class Callout extends AbstractPureComponent2<CalloutProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Callout`;\n\n    public render() {\n        const { className, children, icon, intent, title, ...htmlProps } = this.props;\n        const iconName = this.getIconName(icon, intent);\n        const classes = classNames(\n            Classes.CALLOUT,\n            Classes.intentClass(intent),\n            { [Classes.CALLOUT_ICON]: iconName != null },\n            className,\n        );\n\n        return (\n            <div className={classes} {...htmlProps}>\n                {iconName && <Icon icon={iconName} aria-hidden={true} tabIndex={-1} />}\n                {title && <H5>{title}</H5>}\n                {children}\n            </div>\n        );\n    }\n\n    private getIconName(icon?: CalloutProps[\"icon\"], intent?: Intent): IconName | MaybeElement {\n        // 1. no icon\n        if (icon === null) {\n            return undefined;\n        }\n        // 2. defined iconName prop\n        if (icon !== undefined) {\n            return icon;\n        }\n        // 3. default intent icon\n        switch (intent) {\n            case Intent.DANGER:\n                return \"error\";\n            case Intent.PRIMARY:\n                return \"info-sign\";\n            case Intent.WARNING:\n                return \"warning-sign\";\n            case Intent.SUCCESS:\n                return \"tick\";\n            default:\n                return undefined;\n        }\n    }\n}\n"]}
{"version":3,"file":"popover.js","sourceRoot":"","sources":["../../../../src/components/popover/popover.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { ModifierFn } from \"popper.js\";\nimport * as React from \"react\";\nimport { Manager, Popper, PopperChildrenProps, Reference, ReferenceChildrenProps } from \"react-popper\";\n\nimport { AbstractPureComponent2, Classes, refHandler, setRef } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, HTMLDivProps } from \"../../common/props\";\nimport * as Utils from \"../../common/utils\";\nimport { Overlay } from \"../overlay/overlay\";\nimport { ResizeSensor } from \"../resize-sensor/resizeSensor\";\n// eslint-disable-next-line import/no-cycle\nimport { Tooltip } from \"../tooltip/tooltip\";\nimport { PopoverArrow } from \"./popoverArrow\";\nimport { positionToPlacement } from \"./popoverMigrationUtils\";\nimport { IPopoverSharedProps, PopperModifiers } from \"./popoverSharedProps\";\nimport { arrowOffsetModifier, getTransformOrigin } from \"./popperUtils\";\n\nexport const PopoverInteractionKind = {\n    CLICK: \"click\" as \"click\",\n    CLICK_TARGET_ONLY: \"click-target\" as \"click-target\",\n    HOVER: \"hover\" as \"hover\",\n    HOVER_TARGET_ONLY: \"hover-target\" as \"hover-target\",\n};\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type PopoverInteractionKind = (typeof PopoverInteractionKind)[keyof typeof PopoverInteractionKind];\n\n/** @deprecated migrate to Popover2, use Popover2Props */\nexport interface IPopoverProps extends IPopoverSharedProps {\n    /** HTML props for the backdrop element. Can be combined with `backdropClassName`. */\n    backdropProps?: React.HTMLProps<HTMLDivElement>;\n\n    /**\n     * The content displayed inside the popover. This can instead be provided as\n     * the _second_ element in `children` (first is `target`).\n     */\n    content?: string | JSX.Element;\n\n    /**\n     * Whether the wrapper and target should take up the full width of their container.\n     * Note that supplying `true` for this prop will force  `targetTagName=\"div\"` and\n     * `wrapperTagName=\"div\"`.\n     */\n    fill?: boolean;\n\n    /**\n     * The kind of interaction that triggers the display of the popover.\n     *\n     * @default PopoverInteractionKind.CLICK\n     */\n    interactionKind?: PopoverInteractionKind;\n\n    /**\n     * Enables an invisible overlay beneath the popover that captures clicks and\n     * prevents interaction with the rest of the document until the popover is\n     * closed. This prop is only available when `interactionKind` is\n     * `PopoverInteractionKind.CLICK`. When popovers with backdrop are opened,\n     * they become focused.\n     *\n     * @default false\n     */\n    hasBackdrop?: boolean;\n\n    /**\n     * Whether the application should return focus to the last active element in the\n     * document after this popover closes.\n     *\n     * This is automatically set to `false` if this is a hover interaction popover.\n     *\n     * If you are attaching a popover _and_ a tooltip to the same target, you must take\n     * care to either disable this prop for the popover _or_ disable the tooltip's\n     * `openOnTargetFocus` prop.\n     *\n     * @default false\n     */\n    shouldReturnFocusOnClose?: boolean;\n\n    /**\n     * Ref supplied to the `Classes.POPOVER` element.\n     */\n    popoverRef?: React.Ref<HTMLElement>;\n\n    /**\n     * The target to which the popover content is attached. This can instead be\n     * provided as the _first_ element in `children`.\n     */\n    target?: string | JSX.Element;\n}\n\nexport interface IPopoverState {\n    transformOrigin: string;\n    isOpen: boolean;\n    hasDarkParent: boolean;\n}\n\n/**\n * Popover component.\n *\n * @see https://blueprintjs.com/docs/#core/components/popover\n * @deprecated use { Popover2 } from \"@blueprintjs/popover2\"\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Popover extends AbstractPureComponent2<IPopoverProps, IPopoverState> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Popover`;\n\n    private popoverRef = React.createRef<HTMLDivElement>();\n\n    // eslint-disable-next-line deprecation/deprecation\n    public static defaultProps: IPopoverProps = {\n        boundary: \"scrollParent\",\n        captureDismiss: false,\n        defaultIsOpen: false,\n        disabled: false,\n        fill: false,\n        hasBackdrop: false,\n        hoverCloseDelay: 300,\n        hoverOpenDelay: 150,\n        inheritDarkTheme: true,\n        interactionKind: PopoverInteractionKind.CLICK,\n        minimal: false,\n        modifiers: {},\n        openOnTargetFocus: true,\n        shouldReturnFocusOnClose: false,\n        // N.B. we don't set a default for `placement` or `position` here because that would trigger\n        // a warning in validateProps if the other prop is specified by a user of this component\n        targetTagName: \"span\",\n        transitionDuration: 300,\n        usePortal: true,\n        wrapperTagName: \"span\",\n    };\n\n    /**\n     * DOM element that contains the popover.\n     * When `usePortal={true}`, this element will be portaled outside the usual DOM flow,\n     * so this reference can be very useful for testing.\n     */\n    public popoverElement: HTMLElement | null = null;\n\n    /** DOM element that contains the target. */\n    public targetElement: HTMLElement | null = null;\n\n    public state: IPopoverState = {\n        hasDarkParent: false,\n        isOpen: this.getIsOpen(this.props),\n        transformOrigin: \"\",\n    };\n\n    private cancelOpenTimeout?: () => void;\n\n    // a flag that lets us detect mouse movement between the target and popover,\n    // now that mouseleave is triggered when you cross the gap between the two.\n    private isMouseInTargetOrPopover = false;\n\n    // a flag that indicates whether the target previously lost focus to another\n    // element on the same page.\n    private lostFocusOnSamePage = true;\n\n    // Reference to the Poppper.scheduleUpdate() function, this changes every time the popper is mounted\n    private popperScheduleUpdate?: () => void;\n\n    private handlePopoverRef: React.Ref<HTMLElement> = refHandler(this, \"popoverElement\", this.props.popoverRef);\n\n    private handleTargetRef = (ref: HTMLElement | null) => (this.targetElement = ref);\n\n    public render() {\n        // rename wrapper tag to begin with uppercase letter so it's recognized\n        // as JSX component instead of intrinsic element. but because of its\n        // type, tsc actually recognizes that it is _any_ intrinsic element, so\n        // it can typecheck the HTML props!!\n        const { className, disabled, fill, placement, position = \"auto\", shouldReturnFocusOnClose } = this.props;\n        const { isOpen } = this.state;\n        let { wrapperTagName } = this.props;\n        if (fill) {\n            wrapperTagName = \"div\";\n        }\n\n        const isContentEmpty = Utils.ensureElement(this.understandChildren().content) == null;\n        // need to do this check in render(), because `isOpen` is derived from\n        // state, and state can't necessarily be accessed in validateProps.\n        if (isContentEmpty && !disabled && isOpen !== false && !Utils.isNodeEnv(\"production\")) {\n            console.warn(Errors.POPOVER_WARN_EMPTY_CONTENT);\n        }\n\n        const wrapperClasses = classNames(Classes.POPOVER_WRAPPER, className, {\n            [Classes.FILL]: fill,\n        });\n\n        const defaultAutoFocus = this.isHoverInteractionKind() ? false : undefined;\n\n        const wrapper = React.createElement(\n            wrapperTagName!,\n            { className: wrapperClasses },\n            <Reference innerRef={this.handleTargetRef}>{this.renderTarget}</Reference>,\n            <Overlay\n                autoFocus={this.props.autoFocus ?? defaultAutoFocus}\n                backdropClassName={Classes.POPOVER_BACKDROP}\n                backdropProps={this.props.backdropProps}\n                canEscapeKeyClose={this.props.canEscapeKeyClose}\n                canOutsideClickClose={this.props.interactionKind === PopoverInteractionKind.CLICK}\n                className={this.props.portalClassName}\n                enforceFocus={this.props.enforceFocus}\n                hasBackdrop={this.props.hasBackdrop}\n                isOpen={isOpen && !isContentEmpty}\n                onClose={this.handleOverlayClose}\n                onClosed={this.props.onClosed}\n                onClosing={this.props.onClosing}\n                onOpened={this.props.onOpened}\n                onOpening={this.props.onOpening}\n                transitionDuration={this.props.transitionDuration}\n                transitionName={Classes.POPOVER}\n                usePortal={this.props.usePortal}\n                portalContainer={this.props.portalContainer}\n                // if hover interaciton, it doesn't make sense to take over focus control\n                shouldReturnFocusOnClose={this.isHoverInteractionKind() ? false : shouldReturnFocusOnClose}\n            >\n                <Popper\n                    innerRef={this.handlePopoverRef}\n                    placement={placement ?? positionToPlacement(position)}\n                    modifiers={this.getPopperModifiers()}\n                >\n                    {this.renderPopover}\n                </Popper>\n            </Overlay>,\n        );\n\n        return <Manager>{wrapper}</Manager>;\n    }\n\n    public componentDidMount() {\n        this.updateDarkParent();\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    public componentDidUpdate(prevProps: IPopoverProps, prevState: IPopoverState) {\n        super.componentDidUpdate(prevProps, prevState);\n\n        if (prevProps.popoverRef !== this.props.popoverRef) {\n            setRef(prevProps.popoverRef, null);\n            this.handlePopoverRef = refHandler(this, \"popoverElement\", this.props.popoverRef);\n            setRef(this.props.popoverRef, this.popoverElement);\n        }\n\n        this.updateDarkParent();\n\n        const nextIsOpen = this.getIsOpen(this.props);\n\n        if (this.props.isOpen != null && nextIsOpen !== this.state.isOpen) {\n            this.setOpenState(nextIsOpen);\n            // tricky: setOpenState calls setState only if this.props.isOpen is\n            // not controlled, so we need to invoke setState manually here.\n            this.setState({ isOpen: nextIsOpen });\n        } else if (this.props.disabled && this.state.isOpen && this.props.isOpen == null) {\n            // special case: close an uncontrolled popover when disabled is set to true\n            this.setOpenState(false);\n        }\n    }\n\n    /**\n     * Instance method to instruct the `Popover` to recompute its position.\n     *\n     * This method should only be used if you are updating the target in a way\n     * that does not cause it to re-render, such as changing its _position_\n     * without changing its _size_ (since `Popover` already repositions when it\n     * detects a resize).\n     */\n    public reposition = () => this.popperScheduleUpdate?.();\n\n    // eslint-disable-next-line deprecation/deprecation\n    protected validateProps(props: IPopoverProps & { children?: React.ReactNode }) {\n        if (props.isOpen == null && props.onInteraction != null) {\n            console.warn(Errors.POPOVER_WARN_UNCONTROLLED_ONINTERACTION);\n        }\n        if (props.hasBackdrop && !props.usePortal) {\n            console.warn(Errors.POPOVER_WARN_HAS_BACKDROP_INLINE);\n        }\n        if (props.hasBackdrop && props.interactionKind !== PopoverInteractionKind.CLICK) {\n            console.error(Errors.POPOVER_HAS_BACKDROP_INTERACTION);\n        }\n        if (props.placement !== undefined && props.position !== undefined) {\n            console.warn(Errors.POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX);\n        }\n\n        const childrenCount = React.Children.count(props.children);\n        const hasContentProp = props.content !== undefined;\n        const hasTargetProp = props.target !== undefined;\n\n        if (childrenCount === 0 && !hasTargetProp) {\n            console.error(Errors.POPOVER_REQUIRES_TARGET);\n        }\n        if (childrenCount > 2) {\n            console.warn(Errors.POPOVER_WARN_TOO_MANY_CHILDREN);\n        }\n        if (childrenCount > 0 && hasTargetProp) {\n            console.warn(Errors.POPOVER_WARN_DOUBLE_TARGET);\n        }\n        if (childrenCount === 2 && hasContentProp) {\n            console.warn(Errors.POPOVER_WARN_DOUBLE_CONTENT);\n        }\n    }\n\n    private updateDarkParent() {\n        if (this.props.usePortal && this.state.isOpen) {\n            const hasDarkParent = this.targetElement != null && this.targetElement.closest(`.${Classes.DARK}`) != null;\n            this.setState({ hasDarkParent });\n        }\n    }\n\n    private renderPopover = (popperProps: PopperChildrenProps) => {\n        const { interactionKind, usePortal } = this.props;\n        const { transformOrigin } = this.state;\n\n        // Need to update our reference to this on every render as it will change.\n        this.popperScheduleUpdate = popperProps.scheduleUpdate;\n\n        const popoverHandlers: HTMLDivProps = {\n            // always check popover clicks for dismiss class\n            onClick: this.handlePopoverClick,\n        };\n        if (\n            interactionKind === PopoverInteractionKind.HOVER ||\n            (!usePortal && interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY)\n        ) {\n            popoverHandlers.onMouseEnter = this.handleMouseEnter;\n            popoverHandlers.onMouseLeave = this.handleMouseLeave;\n        }\n\n        const popoverClasses = classNames(\n            Classes.POPOVER,\n            {\n                [Classes.DARK]: this.props.inheritDarkTheme && this.state.hasDarkParent,\n                [Classes.MINIMAL]: this.props.minimal,\n                [Classes.POPOVER_CAPTURING_DISMISS]: this.props.captureDismiss,\n                [Classes.POPOVER_OUT_OF_BOUNDARIES]: popperProps.outOfBoundaries === true,\n            },\n            this.props.popoverClassName,\n        );\n\n        return (\n            <div className={Classes.TRANSITION_CONTAINER} ref={popperProps.ref} style={popperProps.style}>\n                <ResizeSensor onResize={this.reposition}>\n                    <div\n                        className={popoverClasses}\n                        style={{ transformOrigin }}\n                        ref={this.popoverRef}\n                        {...popoverHandlers}\n                    >\n                        {this.isArrowEnabled() && (\n                            <PopoverArrow arrowProps={popperProps.arrowProps} placement={popperProps.placement} />\n                        )}\n                        <div className={Classes.POPOVER_CONTENT}>{this.understandChildren().content}</div>\n                    </div>\n                </ResizeSensor>\n            </div>\n        );\n    };\n\n    private renderTarget = (referenceProps: ReferenceChildrenProps) => {\n        const { fill, openOnTargetFocus, targetClassName, targetProps = {} } = this.props;\n        const { isOpen } = this.state;\n        const isControlled = this.isControlled();\n        const isHoverInteractionKind = this.isHoverInteractionKind();\n        let { targetTagName } = this.props;\n        if (fill) {\n            targetTagName = \"div\";\n        }\n\n        const finalTargetProps: React.HTMLProps<HTMLElement> = isHoverInteractionKind\n            ? {\n                  // HOVER handlers\n                  onBlur: this.handleTargetBlur,\n                  onFocus: this.handleTargetFocus,\n                  onMouseEnter: this.handleMouseEnter,\n                  onMouseLeave: this.handleMouseLeave,\n              }\n            : {\n                  // CLICK needs only one handler\n                  onClick: this.handleTargetClick,\n              };\n        finalTargetProps[\"aria-haspopup\"] = \"true\";\n        finalTargetProps.className = classNames(\n            Classes.POPOVER_TARGET,\n            { [Classes.POPOVER_OPEN]: isOpen },\n            targetProps.className,\n            targetClassName,\n        );\n        finalTargetProps.ref = referenceProps.ref;\n\n        const rawTarget = Utils.ensureElement(this.understandChildren().target);\n\n        if (rawTarget === undefined) {\n            return null;\n        }\n\n        const rawTabIndex = rawTarget.props.tabIndex;\n        // ensure target is focusable if relevant prop enabled\n        const tabIndex = rawTabIndex == null && openOnTargetFocus && isHoverInteractionKind ? 0 : rawTabIndex;\n        const clonedTarget: JSX.Element = React.cloneElement(rawTarget, {\n            className: classNames(rawTarget.props.className, {\n                // this class is mainly useful for button targets; we should only apply it for uncontrolled popovers\n                // when they are opened by a user interaction\n                [Classes.ACTIVE]: isOpen && !isControlled && !isHoverInteractionKind,\n            }),\n            // force disable single Tooltip child when popover is open (BLUEPRINT-552)\n            /* eslint-disable-next-line deprecation/deprecation */\n            disabled: isOpen && Utils.isElementOfType(rawTarget, Tooltip) ? true : rawTarget.props.disabled,\n            tabIndex,\n        });\n        const target = React.createElement(\n            targetTagName!,\n            {\n                ...targetProps,\n                ...finalTargetProps,\n            },\n            clonedTarget,\n        );\n\n        return <ResizeSensor onResize={this.reposition}>{target}</ResizeSensor>;\n    };\n\n    // content and target can be specified as props or as children. this method\n    // normalizes the two approaches, preferring child over prop.\n    private understandChildren() {\n        const { children, content: contentProp, target: targetProp } = this.props;\n        // #validateProps asserts that 1 <= children.length <= 2 so content is optional\n        const [targetChild, contentChild] = React.Children.toArray(children);\n        return {\n            content: contentChild == null ? contentProp : contentChild,\n            target: targetChild == null ? targetProp : targetChild,\n        };\n    }\n\n    private isControlled = () => this.props.isOpen !== undefined;\n\n    // eslint-disable-next-line deprecation/deprecation\n    private getIsOpen(props: IPopoverProps) {\n        // disabled popovers should never be allowed to open.\n        if (props.disabled) {\n            return false;\n        } else if (props.isOpen != null) {\n            return props.isOpen;\n        } else {\n            return props.defaultIsOpen!;\n        }\n    }\n\n    private getPopperModifiers(): PopperModifiers {\n        const { boundary, modifiers } = this.props;\n        const { flip = {}, preventOverflow = {} } = modifiers!;\n        return {\n            ...modifiers,\n            arrowOffset: {\n                enabled: this.isArrowEnabled(),\n                fn: arrowOffsetModifier,\n                order: 510,\n            },\n            flip: { boundariesElement: boundary, ...flip },\n            preventOverflow: { boundariesElement: boundary, ...preventOverflow },\n            updatePopoverState: {\n                enabled: true,\n                fn: this.updatePopoverState,\n                order: 900,\n            },\n        };\n    }\n\n    private handleTargetFocus = (e: React.FocusEvent<HTMLElement>) => {\n        if (this.props.openOnTargetFocus && this.isHoverInteractionKind()) {\n            if (e.relatedTarget == null && !this.lostFocusOnSamePage) {\n                // ignore this focus event -- the target was already focused but the page itself\n                // lost focus (e.g. due to switching tabs).\n                return;\n            }\n            this.handleMouseEnter(e as unknown as React.MouseEvent<HTMLElement>);\n        }\n        this.props.targetProps?.onFocus?.(e);\n    };\n\n    private handleTargetBlur = (e: React.FocusEvent<HTMLElement>) => {\n        if (this.props.openOnTargetFocus && this.isHoverInteractionKind()) {\n            // if the next element to receive focus is within the popover, we'll want to leave the\n            // popover open. e.relatedTarget ought to tell us the next element to receive focus, but if the user just\n            // clicked on an element which is not focusable (either by default or with a tabIndex attribute),\n            // it won't be set. So, we filter those out here and assume that a click handler somewhere else will\n            // close the popover if necessary.\n            if (e.relatedTarget != null && !this.isElementInPopover(e.relatedTarget as HTMLElement)) {\n                this.handleMouseLeave(e as unknown as React.MouseEvent<HTMLElement>);\n            }\n        }\n        this.lostFocusOnSamePage = e.relatedTarget != null;\n        this.props.targetProps?.onBlur?.(e);\n    };\n\n    private handleMouseEnter = (e: React.MouseEvent<HTMLElement>) => {\n        this.isMouseInTargetOrPopover = true;\n\n        // if we're entering the popover, and the mode is set to be HOVER_TARGET_ONLY, we want to manually\n        // trigger the mouse leave event, as hovering over the popover shouldn't count.\n        if (\n            !this.props.usePortal &&\n            this.isElementInPopover(e.target as Element) &&\n            this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY &&\n            !this.props.openOnTargetFocus\n        ) {\n            this.handleMouseLeave(e);\n        } else if (!this.props.disabled) {\n            // only begin opening popover when it is enabled\n            this.setOpenState(true, e, this.props.hoverOpenDelay);\n        }\n        this.props.targetProps?.onMouseEnter?.(e);\n    };\n\n    private handleMouseLeave = (e: React.MouseEvent<HTMLElement>) => {\n        this.isMouseInTargetOrPopover = false;\n\n        // wait until the event queue is flushed, because we want to leave the\n        // popover open if the mouse entered the popover immediately after\n        // leaving the target (or vice versa).\n        this.setTimeout(() => {\n            if (this.isMouseInTargetOrPopover) {\n                return;\n            }\n            // user-configurable closing delay is helpful when moving mouse from target to popover\n            this.setOpenState(false, e, this.props.hoverCloseDelay);\n        });\n        this.props.targetProps?.onMouseLeave?.(e);\n    };\n\n    private handlePopoverClick = (e: React.MouseEvent<HTMLElement>) => {\n        const eventTarget = e.target as HTMLElement;\n        const eventPopover = eventTarget.closest(`.${Classes.POPOVER}`);\n        const isEventFromSelf = eventPopover === this.popoverRef.current;\n        const isEventPopoverCapturing = eventPopover?.classList.contains(Classes.POPOVER_CAPTURING_DISMISS);\n        // an OVERRIDE inside a DISMISS does not dismiss, and a DISMISS inside an OVERRIDE will dismiss.\n        const dismissElement = eventTarget.closest(`.${Classes.POPOVER_DISMISS}, .${Classes.POPOVER_DISMISS_OVERRIDE}`);\n        const shouldDismiss = dismissElement != null && dismissElement.classList.contains(Classes.POPOVER_DISMISS);\n        const isDisabled = eventTarget.closest(`:disabled, .${Classes.DISABLED}`) != null;\n        if (shouldDismiss && !isDisabled && (!isEventPopoverCapturing || isEventFromSelf)) {\n            this.setOpenState(false, e);\n        }\n    };\n\n    private handleOverlayClose = (e?: React.SyntheticEvent<HTMLElement>) => {\n        if (this.targetElement === null || e === undefined) {\n            return;\n        }\n\n        const eventTarget = e.target as HTMLElement;\n        // if click was in target, target event listener will handle things, so don't close\n        if (!Utils.elementIsOrContains(this.targetElement, eventTarget) || e.nativeEvent instanceof KeyboardEvent) {\n            this.setOpenState(false, e);\n        }\n    };\n\n    private handleTargetClick = (e: React.MouseEvent<HTMLElement>) => {\n        // ensure click did not originate from within inline popover before closing\n        if (!this.props.disabled && !this.isElementInPopover(e.target as HTMLElement)) {\n            if (this.props.isOpen == null) {\n                this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n            } else {\n                this.setOpenState(!this.props.isOpen, e);\n            }\n        }\n        this.props.targetProps?.onClick?.(e);\n    };\n\n    // a wrapper around setState({isOpen}) that will call props.onInteraction instead when in controlled mode.\n    // starts a timeout to delay changing the state if a non-zero duration is provided.\n    private setOpenState(isOpen: boolean, e?: React.SyntheticEvent<HTMLElement>, timeout?: number) {\n        // cancel any existing timeout because we have new state\n        this.cancelOpenTimeout?.();\n        if (timeout !== undefined && timeout > 0) {\n            this.cancelOpenTimeout = this.setTimeout(() => this.setOpenState(isOpen, e), timeout);\n        } else {\n            if (this.props.isOpen == null) {\n                this.setState({ isOpen });\n            } else {\n                this.props.onInteraction?.(isOpen, e);\n            }\n            if (!isOpen) {\n                // non-null assertion because the only time `e` is undefined is when in controlled mode\n                // or the rare special case in uncontrolled mode when the `disabled` flag is toggled true\n                this.props.onClose?.(e!);\n            }\n        }\n    }\n\n    private isArrowEnabled() {\n        const { minimal, modifiers } = this.props;\n        // omitting `arrow` from `modifiers` uses Popper default, which does show an arrow.\n        return !minimal && (modifiers?.arrow == null || modifiers.arrow.enabled);\n    }\n\n    private isElementInPopover(element: Element) {\n        return this.popoverElement?.contains(element);\n    }\n\n    private isHoverInteractionKind() {\n        return (\n            this.props.interactionKind === PopoverInteractionKind.HOVER ||\n            this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY\n        );\n    }\n\n    /** Popper modifier that updates React state (for style properties) based on latest data. */\n    private updatePopoverState: ModifierFn = data => {\n        // always set string; let shouldComponentUpdate determine if update is necessary\n        this.setState({ transformOrigin: getTransformOrigin(data) });\n        return data;\n    };\n}\n"]}
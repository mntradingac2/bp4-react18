{"version":3,"file":"popoverMigrationUtils.js","sourceRoot":"","sources":["../../../../src/components/popover/popoverMigrationUtils.ts"],"names":[],"mappings":";;;AAkBA,oDAAiD;AAQjD,SAAgB,mBAAmB,CAAC,QAAyB;IAEzD,QAAQ,QAAQ,EAAE;QACd,KAAK,mBAAQ,CAAC,QAAQ;YAClB,OAAO,WAAW,CAAC;QACvB,KAAK,mBAAQ,CAAC,GAAG;YACb,OAAO,KAAK,CAAC;QACjB,KAAK,mBAAQ,CAAC,SAAS;YACnB,OAAO,SAAS,CAAC;QACrB,KAAK,mBAAQ,CAAC,SAAS;YACnB,OAAO,aAAa,CAAC;QACzB,KAAK,mBAAQ,CAAC,KAAK;YACf,OAAO,OAAO,CAAC;QACnB,KAAK,mBAAQ,CAAC,YAAY;YACtB,OAAO,WAAW,CAAC;QACvB,KAAK,mBAAQ,CAAC,YAAY;YACtB,OAAO,YAAY,CAAC;QACxB,KAAK,mBAAQ,CAAC,MAAM;YAChB,OAAO,QAAQ,CAAC;QACpB,KAAK,mBAAQ,CAAC,WAAW;YACrB,OAAO,cAAc,CAAC;QAC1B,KAAK,mBAAQ,CAAC,WAAW;YACrB,OAAO,UAAU,CAAC;QACtB,KAAK,mBAAQ,CAAC,IAAI;YACd,OAAO,MAAM,CAAC;QAClB,KAAK,mBAAQ,CAAC,QAAQ;YAClB,OAAO,YAAY,CAAC;QACxB,KAAK,MAAM,CAAC;QACZ,KAAK,YAAY,CAAC;QAClB,KAAK,UAAU;YAEX,OAAO,QAAQ,CAAC;QACpB;YACI,OAAO,WAAW,CAAC,QAAQ,CAAC,CAAC;KACpC;AACL,CAAC;AAnCD,kDAmCC;AAGD,SAAS,WAAW,CAAC,CAAQ;IACzB,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;AACjD,CAAC","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Placement } from \"popper.js\";\n\nimport { Position } from \"../../common/position\";\nimport { PopoverPosition } from \"./popoverSharedProps\";\n\n/**\n * Convert a position to a placement.\n *\n * @param position the position to convert\n */\nexport function positionToPlacement(position: PopoverPosition): Placement {\n    /* istanbul ignore next */\n    switch (position) {\n        case Position.TOP_LEFT:\n            return \"top-start\";\n        case Position.TOP:\n            return \"top\";\n        case Position.TOP_RIGHT:\n            return \"top-end\";\n        case Position.RIGHT_TOP:\n            return \"right-start\";\n        case Position.RIGHT:\n            return \"right\";\n        case Position.RIGHT_BOTTOM:\n            return \"right-end\";\n        case Position.BOTTOM_RIGHT:\n            return \"bottom-end\";\n        case Position.BOTTOM:\n            return \"bottom\";\n        case Position.BOTTOM_LEFT:\n            return \"bottom-start\";\n        case Position.LEFT_BOTTOM:\n            return \"left-end\";\n        case Position.LEFT:\n            return \"left\";\n        case Position.LEFT_TOP:\n            return \"left-start\";\n        case \"auto\":\n        case \"auto-start\":\n        case \"auto-end\":\n            // Return the string unchanged.\n            return position;\n        default:\n            return assertNever(position);\n    }\n}\n\n/* istanbul ignore next */\nfunction assertNever(x: never): never {\n    throw new Error(\"Unexpected position: \" + x);\n}\n"]}
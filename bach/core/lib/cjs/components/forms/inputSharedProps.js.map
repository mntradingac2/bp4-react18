{"version":3,"file":"inputSharedProps.js","sourceRoot":"","sources":["../../../../src/components/forms/inputSharedProps.ts"],"names":[],"mappings":"","sourcesContent":["/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IntentProps, MaybeElement, Props } from \"../../common/props\";\nimport type { IconName } from \"../icon/icon\";\n\n/**\n * Shared props interface for text & numeric inputs.\n */\nexport interface InputSharedProps extends IntentProps, Props {\n    /**\n     * Whether the input is non-interactive.\n     *\n     * Note that the content in `rightElement` must be disabled separately if defined;\n     * this prop will not affect it.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Whether the component should take up the full width of its container.\n     */\n    fill?: boolean;\n\n    /**\n     * Class name to apply to the `<input>` element (not the InputGroup container).\n     */\n    inputClassName?: string;\n\n    /**\n     * Ref attached to the HTML `<input>` element backing this component.\n     */\n    inputRef?: React.Ref<HTMLInputElement>;\n\n    /**\n     * Element to render on the left side of input.\n     * This prop is mutually exclusive with `leftIcon`.\n     */\n    leftElement?: JSX.Element;\n\n    /**\n     * Name of a Blueprint UI icon to render on the left side of the input group,\n     * before the user's cursor.\n     *\n     * This prop is mutually exclusive with `leftElement`.\n     *\n     * Note: setting a JSX.Element here is deprecated; use the `leftElement` prop instead.\n     */\n    leftIcon?: IconName | MaybeElement;\n\n    /**\n     * Placeholder text in the absence of any value.\n     */\n    placeholder?: string;\n\n    /**\n     * Element to render on right side of input.\n     * For best results, use a minimal button, tag, or small spinner.\n     */\n    rightElement?: JSX.Element;\n}\n"]}
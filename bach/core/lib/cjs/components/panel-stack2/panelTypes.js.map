{"version":3,"file":"panelTypes.js","sourceRoot":"","sources":["../../../../src/components/panel-stack2/panelTypes.ts"],"names":[],"mappings":"","sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An object describing a panel in a `PanelStack2`.\n */\nexport interface Panel<P> {\n    /**\n     * The renderer for this panel.\n     */\n    renderPanel: (props: PanelProps<P>) => JSX.Element | null;\n\n    /**\n     * HTML title to be passed to the <Text> component\n     */\n    htmlTitle?: string;\n\n    /**\n     * The props passed to the component type when it is rendered. The methods\n     * in `PanelActions` will be injected by `PanelStack2`.\n     */\n    props?: P;\n\n    /**\n     * The title to be displayed above this panel. It is also used as the text\n     * of the back button for any panel opened by this panel.\n     */\n    title?: React.ReactNode;\n}\n\nexport interface PanelActions {\n    /**\n     * Call this method to programatically close this panel. If this is the only\n     * panel on the stack then this method will do nothing.\n     *\n     * Remember that the panel header always contains a \"back\" button that\n     * closes this panel on click (unless there is only one panel on the stack).\n     */\n    closePanel(): void;\n\n    /**\n     * Call this method to open a new panel on the top of the stack.\n     */\n    openPanel<P>(panel: Panel<P>): void;\n}\n\n/**\n * Use this interface in your panel component's props type to access these\n * panel action callbacks which are injected by `PanelStack2`.\n *\n * See the code example in the docs website.\n *\n * @see https://blueprintjs.com/docs/#core/components/panel-stack2\n */\nexport type PanelProps<P> = P & PanelActions;\n"]}
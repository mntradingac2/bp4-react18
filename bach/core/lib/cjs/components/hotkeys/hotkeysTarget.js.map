{"version":3,"file":"hotkeysTarget.js","sourceRoot":"","sources":["../../../../src/components/hotkeys/hotkeysTarget.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { IConstructor } from \"../../common/constructor\";\nimport { HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT, HOTKEYS_WARN_DECORATOR_NO_METHOD } from \"../../common/errors\";\nimport { getDisplayName, isFunction } from \"../../common/utils\";\nimport { HotkeyScope, HotkeysEvents } from \"./hotkeysEvents\";\nimport { IHotkeysProps } from \"./hotkeysTypes\";\n\nexport interface IHotkeysTargetComponent extends React.Component {\n    /** Components decorated with the `@HotkeysTarget` decorator must implement React's component `render` function. */\n    render(): React.ReactElement<any> | null | undefined;\n\n    /**\n     * Components decorated with the `@HotkeysTarget` decorator must implement\n     * this method, and it must return a `Hotkeys` React element.\n     */\n    renderHotkeys: () => React.ReactElement<IHotkeysProps>;\n}\n\n/* eslint-disable deprecation/deprecation */\n\n/** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */\nexport function HotkeysTarget<T extends IConstructor<IHotkeysTargetComponent>>(WrappedComponent: T) {\n    if (!isFunction(WrappedComponent.prototype.renderHotkeys)) {\n        console.warn(HOTKEYS_WARN_DECORATOR_NO_METHOD);\n    }\n\n    return class HotkeysTargetClass extends WrappedComponent {\n        public static displayName = `HotkeysTarget(${getDisplayName(WrappedComponent)})`;\n\n        /** @internal */\n        public globalHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.GLOBAL);\n\n        /** @internal */\n        public localHotkeysEvents: HotkeysEvents = new HotkeysEvents(HotkeyScope.LOCAL);\n\n        public componentDidMount() {\n            if (super.componentDidMount != null) {\n                super.componentDidMount();\n            }\n\n            // attach global key event listeners\n            document.addEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.addEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n        }\n\n        public componentWillUnmount() {\n            super.componentWillUnmount?.();\n            document.removeEventListener(\"keydown\", this.globalHotkeysEvents.handleKeyDown);\n            document.removeEventListener(\"keyup\", this.globalHotkeysEvents.handleKeyUp);\n\n            this.globalHotkeysEvents.clear();\n            this.localHotkeysEvents.clear();\n        }\n\n        public render() {\n            const element = super.render() as JSX.Element;\n\n            if (element == null) {\n                // always return `element` in case caller is distinguishing between `null` and `undefined`\n                return element;\n            }\n\n            if (!React.isValidElement<any>(element)) {\n                console.warn(HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);\n                return element;\n            }\n\n            if (isFunction(this.renderHotkeys)) {\n                const hotkeys = this.renderHotkeys();\n                if (this.localHotkeysEvents) {\n                    this.localHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n                if (this.globalHotkeysEvents) {\n                    this.globalHotkeysEvents.setHotkeys(hotkeys.props);\n                }\n\n                if (this.localHotkeysEvents.count() > 0) {\n                    const tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;\n\n                    const { onKeyDown: existingKeyDown, onKeyUp: existingKeyUp } = element.props;\n\n                    const handleKeyDownWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyDown(e.nativeEvent as KeyboardEvent);\n                        existingKeyDown?.(e);\n                    };\n\n                    const handleKeyUpWrapper = (e: React.KeyboardEvent<HTMLElement>) => {\n                        this.localHotkeysEvents.handleKeyUp(e.nativeEvent as KeyboardEvent);\n                        existingKeyUp?.(e);\n                    };\n                    return React.cloneElement(element, {\n                        onKeyDown: handleKeyDownWrapper,\n                        onKeyUp: handleKeyUpWrapper,\n                        tabIndex,\n                    });\n                }\n            }\n            return element;\n        }\n    };\n}\n"]}
{"version":3,"file":"hotkey.js","sourceRoot":"","sources":["../../../../src/components/hotkeys/hotkey.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCAA0F;AAE1F,+CAA4C;AAS5C,MAAa,MAAO,SAAQ,+BAAoC;IACrD,MAAM,CAAC,WAAW,GAAG,GAAG,2BAAkB,SAAS,CAAC;IAEpD,MAAM,CAAC,YAAY,GAAG;QACzB,YAAY,EAAE,KAAK;QACnB,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,cAAc,EAAE,KAAK;QACrB,eAAe,EAAE,KAAK;KACzB,CAAC;IAEK,MAAM;QACT,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,eAAe,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5D,MAAM,WAAW,GAAG,IAAA,oBAAU,EAAC,gBAAO,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC1D,OAAO,CACH,6BAAK,SAAS,EAAE,WAAW;YACvB,6BAAK,SAAS,EAAE,gBAAO,CAAC,YAAY,IAAG,KAAK,CAAO;YACnD,oBAAC,yBAAW,OAAK,eAAe,GAAI,CAClC,CACT,CAAC;IACN,CAAC;IAES,aAAa,CAAC,KAAmB;QACvC,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;YAC9C,OAAO,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;SAC7D;IACL,CAAC;;AA3BL,wBA4BC","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX, Props } from \"../../common\";\nimport { HotkeyConfig } from \"../../hooks\";\nimport { KeyComboTag } from \"./keyComboTag\";\n\nexport type IHotkeyProps = Props & HotkeyConfig;\n\n/**\n * Hotkey component.\n *\n * @see https://blueprintjs.com/docs/#core/components/hotkeys\n */\nexport class Hotkey extends AbstractPureComponent2<IHotkeyProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Hotkey`;\n\n    public static defaultProps = {\n        allowInInput: false,\n        disabled: false,\n        global: false,\n        preventDefault: false,\n        stopPropagation: false,\n    };\n\n    public render() {\n        const { label, className, ...spreadableProps } = this.props;\n\n        const rootClasses = classNames(Classes.HOTKEY, className);\n        return (\n            <div className={rootClasses}>\n                <div className={Classes.HOTKEY_LABEL}>{label}</div>\n                <KeyComboTag {...spreadableProps} />\n            </div>\n        );\n    }\n\n    protected validateProps(props: IHotkeyProps) {\n        if (props.global !== true && props.group == null) {\n            console.error(\"non-global <Hotkey>s must define a group\");\n        }\n    }\n}\n"]}
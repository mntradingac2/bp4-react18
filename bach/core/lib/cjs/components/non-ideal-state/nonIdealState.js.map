{"version":3,"file":"nonIdealState.js","sourceRoot":"","sources":["../../../../src/components/non-ideal-state/nonIdealState.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCAAsD;AACtD,sEAAgD;AAChD,8CAA6E;AAC7E,8CAAmD;AACnD,uCAAkC;AAClC,uCAAwD;AAExD,IAAY,qBAIX;AAJD,WAAY,qBAAqB;IAC7B,0EAAgC,CAAA;IAChC,oEAA6B,CAAA;IAC7B,gFAA4B,CAAA;AAChC,CAAC,EAJW,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAIhC;AA+CD,MAAa,aAAc,SAAQ,+BAA0C;IAClE,MAAM,CAAC,WAAW,GAAG,GAAG,0BAAkB,gBAAgB,CAAC;IAE3D,MAAM,CAAC,YAAY,GAAgC;QACtD,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;QACxC,MAAM,EAAE,UAAU;KACrB,CAAC;IAEK,MAAM;QACT,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE3D,OAAO,CACH,6BAAK,SAAS,EAAE,IAAA,oBAAU,EAAC,OAAO,CAAC,eAAe,EAAE,GAAG,OAAO,CAAC,eAAe,IAAI,MAAM,EAAE,EAAE,SAAS,CAAC;YACjG,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE;YACtB,MAAM;YACN,QAAQ,CACP,CACT,CAAC;IACN,CAAC;IAEO,iBAAiB;QACrB,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACtC,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,OAAO,SAAS,CAAC;SACpB;aAAM;YACH,OAAO,CACH,6BACI,SAAS,EAAE,OAAO,CAAC,sBAAsB,EACzC,KAAK,EAAE,EAAE,QAAQ,EAAE,GAAG,QAAQ,IAAI,EAAE,UAAU,EAAE,GAAG,QAAQ,IAAI,EAAE;gBAEjE,oBAAC,WAAI,IAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,iBAAe,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,GAAI,CACnE,CACT,CAAC;SACL;IACL,CAAC;IAEO,eAAe;QACnB,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1C,IAAI,KAAK,IAAI,IAAI,IAAI,WAAW,IAAI,IAAI,EAAE;YACtC,OAAO,SAAS,CAAC;SACpB;aAAM;YACH,OAAO,CACH,6BAAK,SAAS,EAAE,OAAO,CAAC,oBAAoB;gBACvC,KAAK,IAAI,oBAAC,SAAE,QAAE,KAAK,CAAM;gBACzB,WAAW,IAAI,IAAA,qBAAa,EAAC,WAAW,EAAE,KAAK,CAAC,CAC/C,CACT,CAAC;SACL;IACL,CAAC;;AAjDL,sCAkDC","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2 } from \"../../common\";\nimport * as Classes from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX, MaybeElement, Props } from \"../../common/props\";\nimport { ensureElement } from \"../../common/utils\";\nimport { H4 } from \"../html/html\";\nimport { Icon, IconName, IconSize } from \"../icon/icon\";\n\nexport enum NonIdealStateIconSize {\n    STANDARD = IconSize.STANDARD * 3,\n    SMALL = IconSize.STANDARD * 2,\n    EXTRA_SMALL = IconSize.LARGE,\n}\n\n// eslint-disable-next-line deprecation/deprecation\nexport type NonIdealStateProps = INonIdealStateProps;\n/** @deprecated use NonIdealStateProps */\nexport interface INonIdealStateProps extends Props {\n    /** An action to resolve the non-ideal state which appears after `description`. */\n    action?: JSX.Element;\n\n    /**\n     * Advanced usage: React `children` will appear last (after `action`).\n     * Avoid passing raw strings as they will not receive margins and disrupt the layout flow.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * A longer description of the non-ideal state.\n     * A string or number value will be wrapped in a `<div>` to preserve margins.\n     */\n    description?: React.ReactChild;\n\n    /** The name of a Blueprint icon or a JSX Element (such as `<Spinner/>`) to render above the title. */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * How large the icon visual should be.\n     *\n     * @default NonIdealStateIconSize.STANDARD\n     */\n    iconSize?: NonIdealStateIconSize;\n\n    /**\n     * Component layout, either vertical or horizontal.\n     *\n     * @default \"vertical\"\n     */\n    layout?: \"vertical\" | \"horizontal\";\n\n    /** The title of the non-ideal state. */\n    title?: React.ReactNode;\n}\n\n/**\n * Non-ideal state component.\n *\n * @see https://blueprintjs.com/docs/#core/components/non-ideal-state\n */\nexport class NonIdealState extends AbstractPureComponent2<NonIdealStateProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.NonIdealState`;\n\n    public static defaultProps: Partial<NonIdealStateProps> = {\n        iconSize: NonIdealStateIconSize.STANDARD,\n        layout: \"vertical\",\n    };\n\n    public render() {\n        const { action, children, className, layout } = this.props;\n\n        return (\n            <div className={classNames(Classes.NON_IDEAL_STATE, `${Classes.NON_IDEAL_STATE}-${layout}`, className)}>\n                {this.maybeRenderVisual()}\n                {this.maybeRenderText()}\n                {action}\n                {children}\n            </div>\n        );\n    }\n\n    private maybeRenderVisual() {\n        const { icon, iconSize } = this.props;\n        if (icon == null) {\n            return undefined;\n        } else {\n            return (\n                <div\n                    className={Classes.NON_IDEAL_STATE_VISUAL}\n                    style={{ fontSize: `${iconSize}px`, lineHeight: `${iconSize}px` }}\n                >\n                    <Icon icon={icon} size={iconSize} aria-hidden={true} tabIndex={-1} />\n                </div>\n            );\n        }\n    }\n\n    private maybeRenderText() {\n        const { description, title } = this.props;\n        if (title == null && description == null) {\n            return undefined;\n        } else {\n            return (\n                <div className={Classes.NON_IDEAL_STATE_TEXT}>\n                    {title && <H4>{title}</H4>}\n                    {description && ensureElement(description, \"div\")}\n                </div>\n            );\n        }\n    }\n}\n"]}
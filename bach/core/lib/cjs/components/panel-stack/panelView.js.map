{"version":3,"file":"panelView.js","sourceRoot":"","sources":["../../../../src/components/panel-stack/panelView.tsx"],"names":[],"mappings":";;;;AAgBA,qDAA+B;AAE/B,yCAA+D;AAC/D,+CAA2C;AAC3C,uCAAoC;AA4BpC,MAAa,SAAU,SAAQ,+BAAuC;IAC3D,MAAM;QACT,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAGrC,OAAO,CACH,6BAAK,SAAS,EAAE,gBAAO,CAAC,gBAAgB;YACnC,IAAI,CAAC,iBAAiB,EAAE;YACzB,oBAAC,KAAK,CAAC,SAAS,IAAC,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,KAAM,KAAK,CAAC,KAAK,GAAI,CACnF,CACT,CAAC;IACN,CAAC;IAEO,iBAAiB;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YACxB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,CACH,6BAAK,SAAS,EAAE,gBAAO,CAAC,kBAAkB;YACtC,kCAAO,IAAI,CAAC,eAAe,EAAE,CAAQ;YACrC,oBAAC,WAAI,IAAC,SAAS,EAAE,gBAAO,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,IAC/E,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CACpB;YACP,iCAAQ,CACN,CACT,CAAC;IACN,CAAC;IAEO,eAAe;QACnB,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,SAAS,EAAE;YACxC,OAAO,IAAI,CAAC;SACf;QACD,OAAO,CACH,oBAAC,gBAAM,kBACQ,MAAM,EACjB,SAAS,EAAE,gBAAO,CAAC,uBAAuB,EAC1C,IAAI,EAAC,cAAc,EACnB,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,KAAK,EAAE,IAAI,EACX,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EACpC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,GAC3C,CACL,CAAC;IACN,CAAC;IAEO,WAAW,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;CACpE;AA/CD,8BA+CC","sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\nimport { IPanel } from \"./panelProps\";\n\n/* eslint-disable deprecation/deprecation */\n\nexport interface IPanelViewProps {\n    /**\n     * Callback invoked when the user presses the back button or a panel invokes\n     * the `closePanel()` injected prop method.\n     */\n    onClose: (removedPanel: IPanel<any>) => void;\n\n    /**\n     * Callback invoked when a panel invokes the `openPanel(panel)` injected\n     * prop method.\n     */\n    onOpen: (addedPanel: IPanel<any>) => void;\n\n    /** The panel to be displayed. */\n    panel: IPanel;\n\n    /** The previous panel in the stack, for rendering the \"back\" button. */\n    previousPanel?: IPanel;\n\n    /** Whether to show the header with the \"back\" button. */\n    showHeader: boolean;\n}\n\nexport class PanelView extends AbstractPureComponent2<IPanelViewProps> {\n    public render() {\n        const { panel, onOpen } = this.props;\n        // two <span> tags in header ensure title is centered as long as\n        // possible, due to `flex: 1` magic.\n        return (\n            <div className={Classes.PANEL_STACK_VIEW}>\n                {this.maybeRenderHeader()}\n                <panel.component openPanel={onOpen} closePanel={this.handleClose} {...panel.props} />\n            </div>\n        );\n    }\n\n    private maybeRenderHeader() {\n        if (!this.props.showHeader) {\n            return null;\n        }\n        return (\n            <div className={Classes.PANEL_STACK_HEADER}>\n                <span>{this.maybeRenderBack()}</span>\n                <Text className={Classes.HEADING} ellipsize={true} title={this.props.panel.htmlTitle}>\n                    {this.props.panel.title}\n                </Text>\n                <span />\n            </div>\n        );\n    }\n\n    private maybeRenderBack() {\n        if (this.props.previousPanel === undefined) {\n            return null;\n        }\n        return (\n            <Button\n                aria-label=\"Back\"\n                className={Classes.PANEL_STACK_HEADER_BACK}\n                icon=\"chevron-left\"\n                minimal={true}\n                onClick={this.handleClose}\n                small={true}\n                text={this.props.previousPanel.title}\n                title={this.props.previousPanel.htmlTitle}\n            />\n        );\n    }\n\n    private handleClose = () => this.props.onClose(this.props.panel);\n}\n"]}
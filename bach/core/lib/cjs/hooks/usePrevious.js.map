{"version":3,"file":"usePrevious.js","sourceRoot":"","sources":["../../../src/hooks/usePrevious.ts"],"names":[],"mappings":";;;;AAgBA,0DAA0B;AAE1B,SAAgB,WAAW,CAAI,KAAQ;IACnC,MAAM,GAAG,GAAG,eAAK,CAAC,MAAM,EAAK,CAAC;IAC9B,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;IACxB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACZ,OAAO,GAAG,CAAC,OAAO,CAAC;AACvB,CAAC;AAND,kCAMC","sourcesContent":["/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\n\nexport function usePrevious<T>(value: T) {\n    const ref = React.useRef<T>();\n    React.useEffect(() => {\n        ref.current = value; // assign the value of ref to the argument\n    }, [value]); // this code will run when the value of 'value' changes\n    return ref.current; // in the end, return the current ref value.\n}\n"]}
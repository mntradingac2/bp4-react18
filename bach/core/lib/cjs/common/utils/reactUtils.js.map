{"version":3,"file":"reactUtils.js","sourceRoot":"","sources":["../../../../src/common/utils/reactUtils.ts"],"names":[],"mappings":";;;;AAgBA,qDAA+B;AAO/B,SAAgB,gBAAgB,CAAC,IAAsB,EAAE,SAAS,GAAG,KAAK;IACtE,OAAO,CACH,IAAI,IAAI,IAAI;QACZ,IAAI,KAAK,EAAE;QACX,IAAI,KAAK,KAAK;QACd,CAAC,CAAC,SAAS;YACP,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;YAEnB,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CACzE,CAAC;AACN,CAAC;AAVD,4CAUC;AAOD,SAAgB,gCAAgC,CAAC,QAAyB;IACtE,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC;AAClE,CAAC;AAFD,4EAEC;AAOD,SAAgB,aAAa,CAAC,KAAkC,EAAE,UAAuC,MAAM;IAC3G,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;QAC7C,OAAO,SAAS,CAAC;KACpB;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAElC,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;KACxF;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAQ,KAAa,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAErG,OAAO,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;KAClD;SAAM,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;QAC9B,OAAO,KAAK,CAAC;KAChB;SAAM;QAEH,OAAO,SAAS,CAAC;KACpB;AACL,CAAC;AAfD,sCAeC;AAED,SAAS,cAAc,CAAU,KAAsB;IACnD,OAAO,CACH,OAAO,KAAK,KAAK,QAAQ;QACzB,OAAQ,KAAa,CAAC,IAAI,KAAK,WAAW;QAC1C,OAAQ,KAAa,CAAC,KAAK,KAAK,WAAW,CAC9C,CAAC;AACN,CAAC;AAYD,SAAgB,cAAc,CAAC,cAA4C;IACvE,OAAQ,cAAsC,CAAC,WAAW,IAAK,cAAyB,CAAC,IAAI,IAAI,SAAS,CAAC;AAC/G,CAAC;AAFD,wCAEC;AAaD,SAAgB,eAAe,CAC3B,OAAY,EACZ,aAAqC;IAErC,OAAO,CACH,OAAO,IAAI,IAAI;QACf,OAAO,CAAC,IAAI,IAAI,IAAI;QACpB,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI;QAChC,OAAO,CAAC,IAAI,CAAC,WAAW,KAAK,aAAa,CAAC,WAAW,CACzD,CAAC;AACN,CAAC;AAVD,0CAUC","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\n/**\n * Returns true if `node` is null/undefined, false, empty string, or an array\n * composed of those. If `node` is an array, only one level of the array is\n * checked, for performance reasons.\n */\nexport function isReactNodeEmpty(node?: React.ReactNode, skipArray = false): boolean {\n    return (\n        node == null ||\n        node === \"\" ||\n        node === false ||\n        (!skipArray &&\n            Array.isArray(node) &&\n            // only recurse one level through arrays, for performance\n            (node.length === 0 || node.every(n => isReactNodeEmpty(n, true))))\n    );\n}\n\n/**\n * Returns true if children are a mappable children array\n *\n * @internal\n */\nexport function isReactChildrenElementOrElements(children: React.ReactNode): children is JSX.Element[] | JSX.Element {\n    return !isReactNodeEmpty(children, true) && children !== true;\n}\n\n/**\n * Converts a React node to an element: non-empty string or number or\n * `React.Fragment` (React 16.3+) is wrapped in given tag name; empty strings\n * and booleans are discarded.\n */\nexport function ensureElement(child: React.ReactNode | undefined, tagName: keyof JSX.IntrinsicElements = \"span\") {\n    if (child == null || typeof child === \"boolean\") {\n        return undefined;\n    } else if (typeof child === \"string\") {\n        // cull whitespace strings\n        return child.trim().length > 0 ? React.createElement(tagName, {}, child) : undefined;\n    } else if (typeof child === \"number\" || typeof (child as any).type === \"symbol\" || Array.isArray(child)) {\n        // React.Fragment has a symbol type, ReactNodeArray extends from Array\n        return React.createElement(tagName, {}, child);\n    } else if (isReactElement(child)) {\n        return child;\n    } else {\n        // child is inferred as {}\n        return undefined;\n    }\n}\n\nfunction isReactElement<T = any>(child: React.ReactNode): child is React.ReactElement<T> {\n    return (\n        typeof child === \"object\" &&\n        typeof (child as any).type !== \"undefined\" &&\n        typeof (child as any).props !== \"undefined\"\n    );\n}\n\n/**\n * Represents anything that has a `name` property such as Functions.\n */\ninterface INamed {\n    name?: string;\n}\n\n/**\n * @deprecated will be removed in v5.0\n */\nexport function getDisplayName(ComponentClass: React.ComponentType | INamed) {\n    return (ComponentClass as React.ComponentType).displayName || (ComponentClass as INamed).name || \"Unknown\";\n}\n\n/**\n * Returns true if the given JSX element matches the given component type.\n *\n * NOTE: This function only checks equality of `displayName` for performance and\n * to tolerate multiple minor versions of a component being included in one\n * application bundle.\n *\n * @param element JSX element in question\n * @param ComponentType desired component type of element\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isElementOfType<P = {}>(\n    element: any,\n    ComponentType: React.ComponentType<P>,\n): element is React.ReactElement<P> {\n    return (\n        element != null &&\n        element.type != null &&\n        element.type.displayName != null &&\n        element.type.displayName === ComponentType.displayName\n    );\n}\n"]}
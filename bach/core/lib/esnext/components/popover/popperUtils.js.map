{"version":3,"file":"popperUtils.js","sourceRoot":"","sources":["../../../../src/components/popover/popperUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport PopperJS from \"popper.js\";\n\n// Popper placement utils\n// ======================\n\n/** Converts a full placement to one of the four positions by stripping text after the `-`. */\nexport function getPosition(placement: PopperJS.Placement) {\n    return placement.split(\"-\")[0] as PopperJS.Position;\n}\n\n/** Returns true if position is left or right. */\nexport function isVerticalPosition(side: PopperJS.Position) {\n    return [\"left\", \"right\"].indexOf(side) !== -1;\n}\n\n/** Returns the opposite position. */\nexport function getOppositePosition(side: PopperJS.Position) {\n    switch (side) {\n        case \"top\":\n            return \"bottom\";\n        case \"left\":\n            return \"right\";\n        case \"bottom\":\n            return \"top\";\n        default:\n            return \"left\";\n    }\n}\n\n/** Returns the CSS alignment keyword corresponding to given placement. */\nexport function getAlignment(placement: PopperJS.Placement) {\n    const align = placement.split(\"-\")[1] as \"start\" | \"end\" | undefined;\n    switch (align) {\n        case \"start\":\n            return \"left\";\n        case \"end\":\n            return \"right\";\n        default:\n            return \"center\";\n    }\n}\n\n// Popper modifiers\n// ================\n\n/** Modifier helper function to compute popper transform-origin based on arrow position */\nexport function getTransformOrigin(data: PopperJS.Data) {\n    const position = getPosition(data.placement);\n    if (data.arrowElement == null) {\n        return isVerticalPosition(position)\n            ? `${getOppositePosition(position)} ${getAlignment(position)}`\n            : `${getAlignment(position)} ${getOppositePosition(position)}`;\n    } else {\n        const arrowSizeShift = data.arrowElement.clientHeight / 2;\n        const { arrow } = data.offsets;\n        // can use keyword for dimension without the arrow, to ease computation burden.\n        // move origin by half arrow's height to keep it centered.\n        return isVerticalPosition(position)\n            ? `${getOppositePosition(position)} ${arrow.top + arrowSizeShift}px`\n            : `${arrow.left + arrowSizeShift}px ${getOppositePosition(position)}`;\n    }\n}\n\n// additional space between arrow and edge of target\nconst ARROW_SPACING = 4;\n\n/** Popper modifier that offsets popper and arrow so arrow points out of the correct side */\nexport const arrowOffsetModifier: PopperJS.ModifierFn = data => {\n    if (data.arrowElement == null) {\n        return data;\n    }\n    // our arrows have equal width and height\n    const arrowSize = data.arrowElement.clientWidth;\n    // this logic borrowed from original Popper arrow modifier itself\n    const position = getPosition(data.placement);\n    const isVertical = isVerticalPosition(position);\n    const len = isVertical ? \"width\" : \"height\";\n    const offsetSide = isVertical ? \"left\" : \"top\";\n\n    const arrowOffsetSize = Math.round(arrowSize / 2 / Math.sqrt(2));\n    // offset popover by arrow size, offset arrow in the opposite direction\n    if (position === \"top\" || position === \"left\") {\n        // the \"up & back\" directions require negative popper offsets\n        data.offsets.popper[offsetSide] -= arrowOffsetSize + ARROW_SPACING;\n        // can only use left/top on arrow so gotta get clever with 100% + X\n        data.offsets.arrow[offsetSide] = data.offsets.popper[len] - arrowSize + arrowOffsetSize;\n    } else {\n        data.offsets.popper[offsetSide] += arrowOffsetSize + ARROW_SPACING;\n        data.offsets.arrow[offsetSide] = -arrowOffsetSize;\n    }\n    return data;\n};\n"]}
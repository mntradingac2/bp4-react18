{"version":3,"file":"domUtils.js","sourceRoot":"","sources":["../../../../src/common/utils/domUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function elementIsOrContains(element: HTMLElement, testElement: HTMLElement) {\n    return element === testElement || element.contains(testElement);\n}\n\n/**\n * Checks whether the given element is inside something that looks like a text input.\n * This is particularly useful to determine if a keyboard event inside this element should take priority over hotkey\n * bindings / keyboard shortcut handlers.\n *\n * @returns true if the element is inside a text input\n */\nexport function elementIsTextInput(elem: HTMLElement) {\n    // we check these cases for unit testing, but this should not happen\n    // during normal operation\n    if (elem == null || elem.closest == null) {\n        return false;\n    }\n\n    const editable = elem.closest(\"input, textarea, [contenteditable=true]\");\n\n    if (editable == null) {\n        return false;\n    }\n\n    // don't let checkboxes, switches, and radio buttons prevent hotkey behavior\n    if (editable.tagName.toLowerCase() === \"input\") {\n        const inputType = (editable as HTMLInputElement).type;\n        if (inputType === \"checkbox\" || inputType === \"radio\") {\n            return false;\n        }\n    }\n\n    // don't let read-only fields prevent hotkey behavior\n    if ((editable as HTMLInputElement).readOnly) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Gets the active element in the document or shadow root (if an element is provided, and it's in the shadow DOM).\n */\nexport function getActiveElement(element?: HTMLElement | null, options?: GetRootNodeOptions) {\n    if (element == null) {\n        return document.activeElement;\n    }\n\n    const rootNode = (element.getRootNode(options) ?? document) as DocumentOrShadowRoot & Node;\n    return rootNode.activeElement;\n}\n\n/**\n * Throttle an event on an EventTarget by wrapping it in a\n * `requestAnimationFrame` call. Returns the event handler that was bound to\n * given eventName so you can clean up after yourself.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll\n */\n/* istanbul ignore next */\nexport function throttleEvent(target: EventTarget, eventName: string, newEventName: string) {\n    const throttledFunc = throttleImpl((event: Event) => {\n        target.dispatchEvent(new CustomEvent(newEventName, event));\n    });\n    target.addEventListener(eventName, throttledFunc);\n    return throttledFunc;\n}\n\nexport interface IThrottledReactEventOptions {\n    preventDefault?: boolean;\n}\n\n/**\n * Throttle a callback by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n *\n * @see https://www.html5rocks.com/en/tutorials/speed/animations/\n */\nexport function throttleReactEventCallback<E extends React.SyntheticEvent = React.SyntheticEvent>(\n    callback: (event: E, ...otherArgs: any[]) => any,\n    options: IThrottledReactEventOptions = {},\n) {\n    const throttledFunc = throttleImpl(\n        callback,\n        (event2: E) => {\n            if (options.preventDefault) {\n                event2.preventDefault();\n            }\n        },\n        // prevent React from reclaiming the event object before we reference it\n        (event2: E) => event2.persist(),\n    );\n    return throttledFunc;\n}\n\n/**\n * Throttle a method by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function throttle<T extends Function>(method: T): T {\n    return throttleImpl(method);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction throttleImpl<T extends Function>(\n    onAnimationFrameRequested: T,\n    onBeforeIsRunningCheck?: T,\n    onAfterIsRunningCheck?: T,\n) {\n    let isRunning = false;\n    const func = (...args: any[]) => {\n        onBeforeIsRunningCheck?.(...args);\n\n        if (isRunning) {\n            return;\n        }\n        isRunning = true;\n\n        onAfterIsRunningCheck?.(...args);\n\n        requestAnimationFrame(() => {\n            onAnimationFrameRequested(...args);\n            isRunning = false;\n        });\n    };\n    return func as any as T;\n}\n\nexport function clickElementOnKeyPress(keys: string[]) {\n    return (e: React.KeyboardEvent) =>\n        keys.some(key => e.key === key) && e.target.dispatchEvent(new MouseEvent(\"click\", { ...e, view: undefined }));\n}\n"]}
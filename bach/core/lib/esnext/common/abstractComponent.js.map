{"version":3,"file":"abstractComponent.js","sourceRoot":"","sources":["../../../src/common/abstractComponent.ts"],"names":[],"mappings":";;;;AAgBA,qDAA+B;AAE/B,mCAAoC;AAQpC,MAAsB,iBAAwB,SAAQ,KAAK,CAAC,SAAe;IAE7D,WAAW,CAAS;IAGtB,UAAU,GAAa,EAAE,CAAC;IAElC,YAAY,KAAQ,EAAE,OAAa;QAC/B,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACtB,IAAI,CAAC,IAAA,iBAAS,EAAC,YAAY,CAAC,EAAE;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClC;IACL,CAAC;IAEM,yBAAyB,CAAC,SAA6C;QAC1E,IAAI,CAAC,IAAA,iBAAS,EAAC,YAAY,CAAC,EAAE;YAC1B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SACjC;IACL,CAAC;IAEM,oBAAoB;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAQM,UAAU,CAAC,QAAoB,EAAE,OAAgB;QACpD,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAKM,aAAa,GAAG,GAAG,EAAE;QACxB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;gBACrC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aAClC;YACD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACxB;IACL,CAAC,CAAC;IAWQ,aAAa,CAAC,CAAqC;IAE7D,CAAC;CACJ;AA5DD,8CA4DC","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { isNodeEnv } from \"./utils\";\n\n/**\n * An abstract component that Blueprint components can extend\n * in order to add some common functionality like runtime props validation.\n *\n * @deprecated componentWillReceiveProps is deprecated in React 16.9; use AbstractComponent2 instead\n */\nexport abstract class AbstractComponent<P, S> extends React.Component<P, S> {\n    /** Component displayName should be `public static`. This property exists to prevent incorrect usage. */\n    protected displayName!: never;\n\n    // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op\n    private timeoutIds: number[] = [];\n\n    constructor(props: P, context?: any) {\n        super(props, context);\n        if (!isNodeEnv(\"production\")) {\n            this.validateProps(this.props);\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: P & { children?: React.ReactNode }) {\n        if (!isNodeEnv(\"production\")) {\n            this.validateProps(nextProps);\n        }\n    }\n\n    public componentWillUnmount() {\n        this.clearTimeouts();\n    }\n\n    /**\n     * Set a timeout and remember its ID.\n     * All stored timeouts will be cleared when component unmounts.\n     *\n     * @returns a \"cancel\" function that will clear timeout when invoked.\n     */\n    public setTimeout(callback: () => void, timeout?: number) {\n        const handle = window.setTimeout(callback, timeout);\n        this.timeoutIds.push(handle);\n        return () => window.clearTimeout(handle);\n    }\n\n    /**\n     * Clear all known timeouts.\n     */\n    public clearTimeouts = () => {\n        if (this.timeoutIds.length > 0) {\n            for (const timeoutId of this.timeoutIds) {\n                window.clearTimeout(timeoutId);\n            }\n            this.timeoutIds = [];\n        }\n    };\n\n    /**\n     * Ensures that the props specified for a component are valid.\n     * Implementations should check that props are valid and usually throw an Error if they are not.\n     * Implementations should not duplicate checks that the type system already guarantees.\n     *\n     * This method should be used instead of React's\n     * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.\n     * Like propTypes, these runtime checks run only in development mode.\n     */\n    protected validateProps(_: P & { children?: React.ReactNode }) {\n        // implement in subclass\n    }\n}\n"]}
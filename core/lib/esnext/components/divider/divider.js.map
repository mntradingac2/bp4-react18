{"version":3,"file":"divider.js","sourceRoot":"","sources":["../../../../src/components/divider/divider.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCAAsD;AACtD,kDAA+C;AAC/C,8CAA+D;AAmB/D,MAAa,OAAQ,SAAQ,+BAAqC;IACvD,MAAM,CAAC,WAAW,GAAG,GAAG,0BAAkB,UAAU,CAAC;IAErD,MAAM;QACT,MAAM,EAAE,SAAS,EAAE,OAAO,GAAG,KAAK,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAChE,MAAM,OAAO,GAAG,IAAA,oBAAU,EAAC,iBAAO,EAAE,SAAS,CAAC,CAAC;QAC/C,OAAO,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE;YAChC,GAAG,SAAS;YACZ,SAAS,EAAE,OAAO;SACrB,CAAC,CAAC;IACP,CAAC;;AAVL,0BAWC","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2 } from \"../../common\";\nimport { DIVIDER } from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\n\nexport interface IDividerProps extends Props, React.HTMLAttributes<HTMLElement> {\n    /**\n     * HTML tag to use for element.\n     *\n     * @default \"div\"\n     */\n    tagName?: keyof JSX.IntrinsicElements;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n\n/**\n * Divider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/divider\n */\nexport class Divider extends AbstractPureComponent2<IDividerProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Divider`;\n\n    public render(): JSX.Element {\n        const { className, tagName = \"div\", ...htmlProps } = this.props;\n        const classes = classNames(DIVIDER, className);\n        return React.createElement(tagName, {\n            ...htmlProps,\n            className: classes,\n        });\n    }\n}\n"]}
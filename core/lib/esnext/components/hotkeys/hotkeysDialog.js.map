{"version":3,"file":"hotkeysDialog.js","sourceRoot":"","sources":["../../../../src/components/hotkeys/hotkeysDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Classes } from \"../../common\";\nimport { Dialog, DialogBody, DialogProps } from \"../../components\";\nimport { Hotkey, IHotkeyProps } from \"./hotkey\";\nimport { Hotkeys } from \"./hotkeys\";\n\nexport interface IHotkeysDialogProps extends DialogProps {\n    /**\n     * This string displayed as the group name in the hotkeys dialog for all\n     * global hotkeys.\n     */\n    globalHotkeysGroup?: string;\n}\n\n/**\n * The delay before showing or hiding the dialog. Should be long enough to\n * allow all registered hotkey listeners to execute first.\n */\nconst DELAY_IN_MS = 10;\n\nclass HotkeysDialog {\n    public componentProps = {\n        globalHotkeysGroup: \"Global hotkeys\",\n    } as any as IHotkeysDialogProps;\n\n    private container: HTMLElement | null = null;\n\n    private hotkeysQueue = [] as IHotkeyProps[][];\n\n    private isDialogShowing = false;\n\n    private showTimeoutToken?: number;\n\n    private hideTimeoutToken?: number;\n\n    public render() {\n        if (this.container == null) {\n            this.container = this.getContainer();\n        }\n        ReactDOM.render(this.renderComponent(), this.container);\n    }\n\n    public unmount() {\n        if (this.container != null) {\n            ReactDOM.unmountComponentAtNode(this.container);\n            this.container.remove();\n            this.container = null;\n        }\n    }\n\n    /**\n     * Because hotkeys can be registered globally and locally and because\n     * event ordering cannot be guaranteed, we use this debouncing method to\n     * allow all hotkey listeners to fire and add their hotkeys to the dialog.\n     *\n     * 10msec after the last listener adds their hotkeys, we render the dialog\n     * and clear the queue.\n     */\n    public enqueueHotkeysForDisplay(hotkeys: IHotkeyProps[]) {\n        this.hotkeysQueue.push(hotkeys);\n\n        // reset timeout for debounce\n        window.clearTimeout(this.showTimeoutToken);\n        this.showTimeoutToken = window.setTimeout(this.show, DELAY_IN_MS);\n    }\n\n    public hideAfterDelay() {\n        window.clearTimeout(this.hideTimeoutToken);\n        this.hideTimeoutToken = window.setTimeout(this.hide, DELAY_IN_MS);\n    }\n\n    public show = () => {\n        this.isDialogShowing = true;\n        this.render();\n    };\n\n    public hide = () => {\n        this.isDialogShowing = false;\n        this.render();\n    };\n\n    public isShowing() {\n        return this.isDialogShowing;\n    }\n\n    private getContainer() {\n        if (this.container == null) {\n            this.container = document.createElement(\"div\");\n            this.container.classList.add(Classes.PORTAL);\n            document.body.appendChild(this.container);\n        }\n        return this.container;\n    }\n\n    private renderComponent() {\n        return (\n            <Dialog\n                {...this.componentProps}\n                className={classNames(Classes.HOTKEY_DIALOG, this.componentProps.className)}\n                isOpen={this.isDialogShowing}\n                onClose={this.hide}\n            >\n                <DialogBody>{this.renderHotkeys()}</DialogBody>\n            </Dialog>\n        );\n    }\n\n    private renderHotkeys() {\n        const hotkeys = this.emptyHotkeyQueue();\n        const elements = hotkeys.map((hotkey, index) => {\n            const group =\n                hotkey.global === true && hotkey.group == null ? this.componentProps.globalHotkeysGroup : hotkey.group;\n\n            return <Hotkey key={index} {...hotkey} group={group} />;\n        });\n\n        return <Hotkeys>{elements}</Hotkeys>;\n    }\n\n    private emptyHotkeyQueue() {\n        // flatten then empty the hotkeys queue\n        const hotkeys = this.hotkeysQueue.reduce((arr, queued) => arr.concat(queued), []);\n        this.hotkeysQueue.length = 0;\n        return hotkeys;\n    }\n}\n\n// singleton instance\nconst HOTKEYS_DIALOG = new HotkeysDialog();\n\nexport function isHotkeysDialogShowing() {\n    return HOTKEYS_DIALOG.isShowing();\n}\n\nexport function setHotkeysDialogProps(props: Partial<IHotkeysDialogProps>) {\n    for (const key in props) {\n        if (props.hasOwnProperty(key)) {\n            (HOTKEYS_DIALOG.componentProps as any)[key] = (props as any)[key];\n        }\n    }\n}\n\nexport function showHotkeysDialog(hotkeys: IHotkeyProps[]) {\n    HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);\n}\n\nexport function hideHotkeysDialog() {\n    HOTKEYS_DIALOG.hide();\n}\n\n/**\n * Use this function instead of `hideHotkeysDialog` if you need to ensure that all hotkey listeners\n * have time to execute with the dialog in a consistent open state. This can avoid flickering the\n * dialog between open and closedÂ states as successive listeners fire.\n */\nexport function hideHotkeysDialogAfterDelay() {\n    HOTKEYS_DIALOG.hideAfterDelay();\n}\n"]}
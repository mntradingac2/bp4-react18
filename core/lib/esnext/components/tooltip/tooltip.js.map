{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../../src/components/tooltip/tooltip.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCAA+D;AAC/D,8CAAqE;AAErE,gDAAqE;AAyDrE,MAAa,OAAQ,SAAQ,+BAAoC;IACtD,MAAM,CAAC,WAAW,GAAG,GAAG,0BAAkB,UAAU,CAAC;IAGrD,MAAM,CAAC,YAAY,GAA0B;QAChD,eAAe,EAAE,CAAC;QAClB,cAAc,EAAE,GAAG;QACnB,OAAO,EAAE,KAAK;QACd,kBAAkB,EAAE,GAAG;KAC1B,CAAC;IAGM,OAAO,GAAmB,IAAI,CAAC;IAEhC,MAAM;QACT,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,gBAAgB,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACxE,MAAM,OAAO,GAAG,IAAA,oBAAU,EACtB,gBAAO,CAAC,OAAO,EACf,EAAE,CAAC,gBAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EACzC,gBAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAC3B,gBAAgB,CACnB,CAAC;QAEF,OAAO,CAEH,oBAAC,iBAAO,IACJ,eAAe,EAAE,gCAAsB,CAAC,iBAAiB,EACzD,SAAS,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,KAClD,SAAS,EACb,SAAS,EAAE,KAAK,EAChB,iBAAiB,EAAE,KAAK,EACxB,YAAY,EAAE,KAAK,EACnB,IAAI,EAAE,IAAI,EACV,gBAAgB,EAAE,OAAO,EACzB,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAE/B,QAAQ,CACH,CACb,CAAC;IACN,CAAC;IAEM,UAAU;QACb,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;SAC7B;IACL,CAAC;;AA9CL,0BA+CC","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, IntentProps } from \"../../common/props\";\n// eslint-disable-next-line import/no-cycle\nimport { Popover, PopoverInteractionKind } from \"../popover/popover\";\nimport { IPopoverSharedProps } from \"../popover/popoverSharedProps\";\n\n/** @deprecated migrate to Tooltip2, use Tooltip2Props */\nexport type TooltipProps = ITooltipProps; // eslint-disable-line deprecation/deprecation\n/** @deprecated migrate to Tooltip2, use Tooltip2Props */\nexport interface ITooltipProps extends IPopoverSharedProps, IntentProps {\n    /**\n     * The content that will be displayed inside of the tooltip.\n     */\n    content: JSX.Element | string;\n\n    /**\n     * The amount of time in milliseconds the tooltip should remain open after\n     * the user hovers off the trigger. The timer is canceled if the user mouses\n     * over the target before it expires.\n     *\n     * @default 0\n     */\n    hoverCloseDelay?: number;\n\n    /**\n     * The amount of time in milliseconds the tooltip should wait before opening\n     * after the user hovers over the trigger. The timer is canceled if the user\n     * mouses away from the target before it expires.\n     *\n     * @default 100\n     */\n    hoverOpenDelay?: number;\n\n    /**\n     * The kind of hover interaction that triggers the display of the tooltip.\n     * Tooltips do not support click interactions.\n     *\n     * @default PopoverInteractionKind.HOVER_TARGET_ONLY\n     */\n    interactionKind?: typeof PopoverInteractionKind.HOVER | typeof PopoverInteractionKind.HOVER_TARGET_ONLY;\n\n    /**\n     * Indicates how long (in milliseconds) the tooltip's appear/disappear\n     * transition takes. This is used by React `CSSTransition` to know when a\n     * transition completes and must match the duration of the animation in CSS.\n     * Only set this prop if you override Blueprint's default transitions with\n     * new transitions of a different length.\n     *\n     * @default 100\n     */\n    transitionDuration?: number;\n}\n\n/**\n * Tooltip component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tooltip\n * @deprecated use { Tooltip2 } from \"@blueprintjs/popover2\"\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Tooltip extends AbstractPureComponent2<TooltipProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Tooltip`;\n\n    // eslint-disable-next-line deprecation/deprecation\n    public static defaultProps: Partial<TooltipProps> = {\n        hoverCloseDelay: 0,\n        hoverOpenDelay: 100,\n        minimal: false,\n        transitionDuration: 100,\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    private popover: Popover | null = null;\n\n    public render() {\n        const { children, intent, popoverClassName, ...restProps } = this.props;\n        const classes = classNames(\n            Classes.TOOLTIP,\n            { [Classes.MINIMAL]: this.props.minimal },\n            Classes.intentClass(intent),\n            popoverClassName,\n        );\n\n        return (\n            /* eslint-disable deprecation/deprecation */\n            <Popover\n                interactionKind={PopoverInteractionKind.HOVER_TARGET_ONLY}\n                modifiers={{ arrow: { enabled: !this.props.minimal } }}\n                {...restProps}\n                autoFocus={false}\n                canEscapeKeyClose={false}\n                enforceFocus={false}\n                lazy={true}\n                popoverClassName={classes}\n                portalContainer={this.props.portalContainer}\n                ref={ref => (this.popover = ref)}\n            >\n                {children}\n            </Popover>\n        );\n    }\n\n    public reposition() {\n        if (this.popover != null) {\n            this.popover.reposition();\n        }\n    }\n}\n"]}
{"version":3,"file":"htmlSelect.js","sourceRoot":"","sources":["../../../../src/components/html-select/htmlSelect.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCAAsD;AACtD,kDAAmF;AAGnF,uCAAyD;AA+DzD,MAAa,UAAW,SAAQ,+BAAuC;IAC5D,MAAM;QACT,MAAM,EACF,SAAS,EACT,QAAQ,EACR,UAAU,EACV,IAAI,EACJ,QAAQ,GAAG,uBAAuB,EAClC,SAAS,EACT,KAAK,EACL,OAAO,EACP,OAAO,GAAG,EAAE,EACZ,GAAG,SAAS,EACf,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,MAAM,OAAO,GAAG,IAAA,oBAAU,EACtB,qBAAW,EACX;YACI,CAAC,kBAAQ,CAAC,EAAE,QAAQ;YACpB,CAAC,cAAI,CAAC,EAAE,IAAI;YACZ,CAAC,eAAK,CAAC,EAAE,KAAK;YACd,CAAC,iBAAO,CAAC,EAAE,OAAO;SACrB,EACD,SAAS,CACZ,CAAC;QAEF,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACxC,MAAM,KAAK,GAAgB,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;YACnF,OAAO,mCAAY,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,GAAI,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,OAAO,CACH,6BAAK,SAAS,EAAE,OAAO;YACnB,gCAAQ,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,KAAM,SAAS,EAAE,QAAQ,EAAE,KAAK;gBAC/F,cAAc;gBACd,SAAS,CAAC,QAAQ,CACd;YACT,oBAAC,WAAI,IAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC,eAAe,KAAK,SAAS,GAAI,CAC3D,CACT,CAAC;IACN,CAAC;CACJ;AAxCD,gCAwCC","sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2 } from \"../../common\";\nimport { DISABLED, FILL, HTML_SELECT, LARGE, MINIMAL } from \"../../common/classes\";\nimport { IElementRefProps, OptionProps } from \"../../common/props\";\nimport { Extends } from \"../../common/utils\";\nimport { Icon, IconName, IconProps } from \"../icon/icon\";\n\nexport type HTMLSelectIconName = Extends<IconName, \"double-caret-vertical\" | \"caret-down\">;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type HTMLSelectProps = IHTMLSelectProps;\n/** @deprecated use HTMLSelectProps */\nexport interface IHTMLSelectProps\n    // eslint-disable-next-line deprecation/deprecation\n    extends IElementRefProps<HTMLSelectElement>,\n        React.SelectHTMLAttributes<HTMLSelectElement> {\n    children?: React.ReactNode;\n\n    /** Whether this element is non-interactive. */\n    disabled?: boolean;\n\n    /** Whether this element should fill its container. */\n    fill?: boolean;\n\n    /**\n     * Name of one of the supported icons for this component to display on the right side of the element.\n     *\n     * @default \"double-caret-vertical\"\n     */\n    iconName?: HTMLSelectIconName;\n\n    /**\n     * Props to spread to the `<Icon>` element.\n     *\n     * Note that `iconProps.icon` is deprecated and will be removed in Blueprint v5; use `iconName` instead.\n     */\n    iconProps?: Partial<IconProps>;\n\n    /** Whether to use large styles. */\n    large?: boolean;\n\n    /** Whether to use minimal styles. */\n    minimal?: boolean;\n\n    /** Multiple select is not supported. */\n    multiple?: never;\n\n    /** Change event handler. Use `event.currentTarget.value` to access the new value. */\n    onChange?: React.ChangeEventHandler<HTMLSelectElement>;\n\n    /**\n     * Shorthand for supplying options: an array of basic types or\n     * `{ label?, value }` objects. If no `label` is supplied, `value`\n     * will be used as the label.\n     */\n    options?: ReadonlyArray<string | number | OptionProps>;\n\n    /** Controlled value of this component. */\n    value?: string | number;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * HTML select component\n *\n * @see https://blueprintjs.com/docs/#core/components/html-select\n */\nexport class HTMLSelect extends AbstractPureComponent2<HTMLSelectProps> {\n    public render() {\n        const {\n            className,\n            disabled,\n            elementRef,\n            fill,\n            iconName = \"double-caret-vertical\",\n            iconProps,\n            large,\n            minimal,\n            options = [],\n            ...htmlProps\n        } = this.props;\n        const classes = classNames(\n            HTML_SELECT,\n            {\n                [DISABLED]: disabled,\n                [FILL]: fill,\n                [LARGE]: large,\n                [MINIMAL]: minimal,\n            },\n            className,\n        );\n\n        const optionChildren = options.map(option => {\n            const props: OptionProps = typeof option === \"object\" ? option : { value: option };\n            return <option {...props} key={props.value} children={props.label || props.value} />;\n        });\n\n        return (\n            <div className={classes}>\n                <select disabled={disabled} ref={elementRef} value={this.props.value} {...htmlProps} multiple={false}>\n                    {optionChildren}\n                    {htmlProps.children}\n                </select>\n                <Icon icon={iconName} title=\"Open dropdown\" {...iconProps} />\n            </div>\n        );\n    }\n}\n"]}
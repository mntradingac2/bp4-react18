{"version":3,"file":"tab.js","sourceRoot":"","sources":["../../../../src/components/tabs/tab.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAI/B,yCAA+D;AAC/D,8CAA2F;AAkE3F,MAAa,GAAI,SAAQ,+BAAgC;IAC9C,MAAM,CAAC,YAAY,GAAsB;QAC5C,QAAQ,EAAE,KAAK;KAClB,CAAC;IAEK,MAAM,CAAC,WAAW,GAAG,GAAG,0BAAkB,MAAM,CAAC;IAIjD,MAAM;QACT,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACxC,OAAO,CACH,6BAAK,SAAS,EAAE,IAAA,oBAAU,EAAC,gBAAO,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,IAAI,EAAC,SAAS,IACnE,KAAK,CACJ,CACT,CAAC;IACN,CAAC;;AAhBL,kBAiBC","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { IconName } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, HTMLDivProps, MaybeElement, Props } from \"../../common/props\";\nimport { TagProps } from \"../tag/tag\";\n\nexport type TabId = string | number;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type TabProps = ITabProps;\n/** @deprecated use TabProps */\nexport interface ITabProps extends Props, Omit<HTMLDivProps, \"id\" | \"title\" | \"onClick\"> {\n    /**\n     * Content of tab title, rendered in a list above the active panel.\n     * Can also be set via the `title` prop.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Whether the tab is disabled.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Unique identifier used to control which tab is selected\n     * and to generate ARIA attributes for accessibility.\n     */\n    id: TabId;\n\n    /**\n     * Panel content, rendered by the parent `Tabs` when this tab is active.\n     * If omitted, no panel will be rendered for this tab.\n     */\n    panel?: JSX.Element;\n\n    /**\n     * Space-delimited string of class names applied to tab panel container.\n     */\n    panelClassName?: string;\n\n    /**\n     * Content of tab title element, rendered in a list above the active panel.\n     * Can also be set via React `children`.\n     */\n    title?: React.ReactNode;\n\n    /** Name of a Blueprint UI icon (or an icon element) to render before the children. */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Content to render inside a `<Tag>` after the children.\n     * The tag is `minimal` by default; it can be further modified by using `tagProps`.\n     */\n    tagContent?: TagProps[\"children\"];\n\n    /**\n     * Props to customize the `<Tag>` rendered after the children.\n     * This has no effect if `tagContent` is `undefined`.\n     */\n    tagProps?: Omit<TagProps, \"children\">;\n}\n\n/**\n * Tab component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tabs.tab\n */\nexport class Tab extends AbstractPureComponent2<TabProps> {\n    public static defaultProps: Partial<TabProps> = {\n        disabled: false,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Tab`;\n\n    // this component is never rendered directly; see Tabs#renderTabPanel()\n    /* istanbul ignore next */\n    public render() {\n        const { className, panel } = this.props;\n        return (\n            <div className={classNames(Classes.TAB_PANEL, className)} role=\"tablist\">\n                {panel}\n            </div>\n        );\n    }\n}\n"]}
{"version":3,"file":"portal2.js","sourceRoot":"","sources":["../../../../src/components/portal/portal2.tsx"],"names":[],"mappings":";;;;AA8BA,qDAA+B;AAC/B,4DAAsC;AAEtC,sEAAgD;AAEhD,oEAA8C;AAC9C,8CAA+D;AAC/D,wEAAoE;AACpE,yDAAsD;AAoBtD,MAAM,mBAAmB,GAAuC;IAC5D,wBAAwB,EAAE,CAAC,GAAwB,EAAE,GAA8B,EAAE,EAAE;QACnF,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;YAClD,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC;SAC7D;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;CACJ,CAAC;AASF,SAAgB,OAAO,CAAC,KAAmB,EAAE,gBAAqC,EAAE;IAChF,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC,8BAAa,CAAC,CAAC;IAEhD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1D,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAe,CAAC;IAExE,MAAM,sBAAsB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE;QAClD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,aAAa,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACpD,aAAa,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;QAE5D,MAAM,EAAE,wBAAwB,EAAE,GAAG,aAAa,CAAC;QACnD,IAAI,wBAAwB,IAAI,IAAI,IAAI,wBAAwB,KAAK,EAAE,EAAE;YACrE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;YAChD,aAAa,CAAC,SAAS,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;SAChE;QAED,OAAO,SAAS,CAAC;IACrB,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;IAG/C,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,EAAE;YACzB,OAAO;SACV;QACD,MAAM,gBAAgB,GAAG,sBAAsB,EAAE,CAAC;QAClD,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAC9C,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QACnC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEpB,OAAO,GAAG,EAAE;YACR,gBAAgB,CAAC,MAAM,EAAE,CAAC;YAC1B,aAAa,CAAC,KAAK,CAAC,CAAC;YACrB,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC,CAAC;IAG9C,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,IAAI,UAAU,EAAE;YACZ,KAAK,CAAC,eAAe,EAAE,EAAE,CAAC;SAC7B;IACL,CAAC,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;IAGxC,MAAM,aAAa,GAAG,IAAA,yBAAW,EAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACnD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACjB,IAAI,aAAa,IAAI,IAAI,EAAE;YACvB,gBAAgB,CAAC,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;YACzD,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;SAC3D;IACL,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAKtB,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,UAAU,IAAI,aAAa,IAAI,IAAI,EAAE;QACzE,OAAO,IAAI,CAAC;KACf;SAAM;QACH,OAAO,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;KAC/D;AACL,CAAC;AA9DD,0BA8DC;AACD,OAAO,CAAC,YAAY,GAAG;IACnB,SAAS,EAAE,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;CACzE,CAAC;AACF,OAAO,CAAC,WAAW,GAAG,GAAG,0BAAkB,UAAU,CAAC;AACtD,OAAO,CAAC,YAAY,GAAG,mBAAmB,CAAC;AAE3C,SAAS,gBAAgB,CAAC,SAAuB,EAAE,SAAkB;IACjE,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,KAAK,EAAE,EAAE;QACvC,SAAS,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAC7C;AACL,CAAC;AAED,SAAS,aAAa,CAAC,SAAuB,EAAE,SAAkB;IAC9D,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,KAAK,EAAE,EAAE;QACvC,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAC1C;AACL,CAAC","sourcesContent":["/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This is the next version of <Portal>, reimplemented as a function component.\n *\n * It supports both the newer React context API and the legacy context API. Support for the legacy context API\n * will be removed in Blueprint v6.0.\n *\n * Portal2 is not currently used anywhere in Blueprint. We had to revert the change which updated the standard\n * <Portal> to use this implementation because of subtle breaks caused by interactions with the (long-deprecated)\n * react-hot-loader library. To be safe, we've left Portal as a class component for now, and will promote this Portal2\n * implementation to be the standard Portal in Blueprint v5.0.\n *\n * @see https://github.com/palantir/blueprint/issues/5511\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport * as Classes from \"../../common/classes\";\nimport { ValidationMap } from \"../../common/context\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\nimport { PortalContext } from \"../../context/portal/portalProvider\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nimport type { PortalLegacyContext } from \"./portal\";\n\nexport interface Portal2Props extends Props {\n    /** Contents to send through the portal. */\n    children: React.ReactNode;\n\n    /**\n     * Callback invoked when the children of this `Portal` have been added to the DOM.\n     */\n    onChildrenMount?: () => void;\n\n    /**\n     * The HTML element that children will be mounted to.\n     *\n     * @default document.body\n     */\n    container?: HTMLElement;\n}\n\nconst REACT_CONTEXT_TYPES: ValidationMap<PortalLegacyContext> = {\n    blueprintPortalClassName: (obj: PortalLegacyContext, key: keyof PortalLegacyContext) => {\n        if (obj[key] != null && typeof obj[key] !== \"string\") {\n            return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);\n        }\n        return undefined;\n    },\n};\n\n/**\n * Portal (v2) component.\n *\n * This component detaches its contents and re-attaches them to document.body.\n * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).\n * Any class names passed to this element will be propagated to the new container element on document.body.\n */\nexport function Portal2(props: Portal2Props, legacyContext: PortalLegacyContext = {}) {\n    const context = React.useContext(PortalContext);\n\n    const [hasMounted, setHasMounted] = React.useState(false);\n    const [portalElement, setPortalElement] = React.useState<HTMLElement>();\n\n    const createContainerElement = React.useCallback(() => {\n        const container = document.createElement(\"div\");\n        container.classList.add(Classes.PORTAL);\n        maybeAddClass(container.classList, props.className); // directly added to this portal element\n        maybeAddClass(container.classList, context.portalClassName); // added via PortalProvider context\n\n        const { blueprintPortalClassName } = legacyContext;\n        if (blueprintPortalClassName != null && blueprintPortalClassName !== \"\") {\n            console.error(Errors.PORTAL_LEGACY_CONTEXT_API);\n            maybeAddClass(container.classList, blueprintPortalClassName); // added via legacy context\n        }\n\n        return container;\n    }, [props.className, context.portalClassName]);\n\n    // create the container element & attach it to the DOM\n    React.useEffect(() => {\n        if (props.container == null) {\n            return;\n        }\n        const newPortalElement = createContainerElement();\n        props.container.appendChild(newPortalElement);\n        setPortalElement(newPortalElement);\n        setHasMounted(true);\n\n        return () => {\n            newPortalElement.remove();\n            setHasMounted(false);\n            setPortalElement(undefined);\n        };\n    }, [props.container, createContainerElement]);\n\n    // wait until next successful render to invoke onChildrenMount callback\n    React.useEffect(() => {\n        if (hasMounted) {\n            props.onChildrenMount?.();\n        }\n    }, [hasMounted, props.onChildrenMount]);\n\n    // update className prop on portal DOM element when props change\n    const prevClassName = usePrevious(props.className);\n    React.useEffect(() => {\n        if (portalElement != null) {\n            maybeRemoveClass(portalElement.classList, prevClassName);\n            maybeAddClass(portalElement.classList, props.className);\n        }\n    }, [props.className]);\n\n    // Only render `children` once this component has mounted in a browser environment, so they are\n    // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.\n    // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals\n    if (typeof document === \"undefined\" || !hasMounted || portalElement == null) {\n        return null;\n    } else {\n        return ReactDOM.createPortal(props.children, portalElement);\n    }\n}\nPortal2.defaultProps = {\n    container: typeof document !== \"undefined\" ? document.body : undefined,\n};\nPortal2.displayName = `${DISPLAYNAME_PREFIX}.Portal2`;\nPortal2.contextTypes = REACT_CONTEXT_TYPES;\n\nfunction maybeRemoveClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.remove(...className.split(\" \"));\n    }\n}\n\nfunction maybeAddClass(classList: DOMTokenList, className?: string) {\n    if (className != null && className !== \"\") {\n        classList.add(...className.split(\" \"));\n    }\n}\n"]}
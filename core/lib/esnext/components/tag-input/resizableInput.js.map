{"version":3,"file":"resizableInput.js","sourceRoot":"","sources":["../../../../src/components/tag-input/resizableInput.tsx"],"names":[],"mappings":";;;;AAIA,uDAAuE;AAEvE,yCAA2E;AAI9D,QAAA,cAAc,GAAG,IAAA,kBAAU,EAAsB,SAAS,cAAc,CAAC,KAAK,EAAE,GAAG;IAC5F,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC;IAC3C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IACtC,MAAM,IAAI,GAAG,IAAA,cAAM,EAAkB,IAAI,CAAC,CAAC;IAE3C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACX,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACtC;IACL,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,UAAU,EAAE,GAAG,KAAK,CAAC;IAEjD,MAAM,iBAAiB,GAA+C,GAAG,CAAC,EAAE;QACxE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,CACH;QACI,wCAAM,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAO,CAAC,oBAAoB,iBAAe,IAAI,IAEtE,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAC7B;QACP,4CAAW,UAAU,EAAE,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,iBAAiB,EAAE,GAAG,EAAE,GAAG,GAAI,CACzG,CACN,CAAC;AACN,CAAC,CAAC,CAAC;AACH,sBAAc,CAAC,WAAW,GAAG,GAAG,2BAAkB,iBAAiB,CAAC","sourcesContent":["/* !\n * (c) Copyright 2022 Palantir Technologies Inc. All rights reserved.\n */\n\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX, HTMLInputProps } from \"../../common\";\n\nexport type Ref = HTMLInputElement;\n\nexport const ResizableInput = forwardRef<Ref, HTMLInputProps>(function ResizableInput(props, ref) {\n    const [content, setContent] = useState(\"\");\n    const [width, setWidth] = useState(0);\n    const span = useRef<HTMLSpanElement>(null);\n\n    useEffect(() => {\n        if (span.current != null) {\n            setWidth(span.current.offsetWidth);\n        }\n    }, [content]);\n\n    const { onChange, style, ...otherProps } = props;\n\n    const handleInputChange: React.ChangeEventHandler<HTMLInputElement> = evt => {\n        onChange?.(evt);\n        setContent(evt?.target?.value ?? \"\");\n    };\n\n    return (\n        <>\n            <span ref={span} className={Classes.RESIZABLE_INPUT_SPAN} aria-hidden={true}>\n                {/* Need to replace spaces with the html character for them to be preserved */}\n                {content.replace(/ /g, \"\\u00a0\")}\n            </span>\n            <input {...otherProps} type=\"text\" style={{ ...style, width }} onChange={handleInputChange} ref={ref} />\n        </>\n    );\n});\nResizableInput.displayName = `${DISPLAYNAME_PREFIX}.ResizableInput`;\n"]}
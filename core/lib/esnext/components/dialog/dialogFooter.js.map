{"version":3,"file":"dialogFooter.js","sourceRoot":"","sources":["../../../../src/components/dialog/dialogFooter.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCAA+D;AAmC/D,MAAa,YAAa,SAAQ,+BAAyC;IAChE,MAAM,CAAC,YAAY,GAAsB;QAC5C,OAAO,EAAE,KAAK;KACjB,CAAC;IAEK,MAAM;QACT,OAAO,CACH,6BACI,SAAS,EAAE,IAAA,oBAAU,EAAC,gBAAO,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBAC/D,CAAC,gBAAO,CAAC,mBAAmB,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;aACrD,CAAC;YAED,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,yBAAyB,EAAE,CAC/B,CACT,CAAC;IACN,CAAC;IAGO,iBAAiB;QACrB,OAAO,6BAAK,SAAS,EAAE,gBAAO,CAAC,0BAA0B,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAO,CAAC;IAC3F,CAAC;IAGO,yBAAyB;QAC7B,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,IAAI,OAAO,IAAI,IAAI,EAAE;YACjB,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,6BAAK,SAAS,EAAE,gBAAO,CAAC,qBAAqB,IAAG,OAAO,CAAO,CAAC;IAC1E,CAAC;;AA9BL,oCA+BC","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Props } from \"../../common/props\";\n\nexport interface DialogFooterProps extends Props {\n    /** Child contents are rendered on the left side of the footer. */\n    children?: React.ReactNode;\n\n    /** Dialog actions (typically buttons) are rendered on the right side of the footer. */\n    actions?: React.ReactNode;\n\n    /**\n     * Use a \"minimal\" appearance for the footer, simply applying an HTML role and\n     * some visual padding. This is useful for small dialogs, and should not be used\n     * with `<DialogBody useOverflowScrollContainer>`.\n     *\n     * Note that this is the default behavior when using the CSS API, since that's\n     * how the `-dialog-footer` class was first introduced, so these styles are\n     * applied without a \"modifier\" class.\n     *\n     * When using the JS component API, `minimal` is false by default.\n     *\n     * Show the footer close from the content.\n     * Do not use with scroll body\n     * Use for small dialogs (confirm)\n     *\n     * @default false;\n     */\n    minimal?: boolean;\n}\n\n/**\n * Dialog footer component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog.dialog-footer-props\n */\nexport class DialogFooter extends AbstractPureComponent2<DialogFooterProps> {\n    public static defaultProps: DialogFooterProps = {\n        minimal: false,\n    };\n\n    public render() {\n        return (\n            <div\n                className={classNames(Classes.DIALOG_FOOTER, this.props.className, {\n                    [Classes.DIALOG_FOOTER_FIXED]: !this.props.minimal,\n                })}\n            >\n                {this.renderMainSection()}\n                {this.maybeRenderActionsSection()}\n            </div>\n        );\n    }\n\n    /** Render the main footer section (left aligned). */\n    private renderMainSection() {\n        return <div className={Classes.DIALOG_FOOTER_MAIN_SECTION}>{this.props.children}</div>;\n    }\n\n    /** Optionally render the footer actions (right aligned). */\n    private maybeRenderActionsSection() {\n        const { actions } = this.props;\n        if (actions == null) {\n            return undefined;\n        }\n        return <div className={Classes.DIALOG_FOOTER_ACTIONS}>{actions}</div>;\n    }\n}\n"]}
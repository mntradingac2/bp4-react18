{"version":3,"file":"slider.js","sourceRoot":"","sources":["../../../../src/components/slider/slider.tsx"],"names":[],"mappings":";;;;AAgBA,qDAA+B;AAE/B,yCAA8D;AAC9D,8CAAwD;AAExD,+CAA8D;AAoC9D,MAAa,MAAO,SAAQ,+BAAmC;IACpD,MAAM,CAAC,YAAY,GAAgB;QACtC,GAAG,yBAAW,CAAC,kBAAkB;QACjC,YAAY,EAAE,CAAC;QACf,MAAM,EAAE,eAAM,CAAC,OAAO;QACtB,KAAK,EAAE,CAAC;KACX,CAAC;IAEK,MAAM,CAAC,WAAW,GAAG,GAAG,0BAAkB,SAAS,CAAC;IAEpD,MAAM;QACT,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACnG,OAAO,CACH,oBAAC,yBAAW,OAAK,KAAK;YAClB,oBAAC,yBAAW,CAAC,MAAM,IACf,KAAK,EAAE,KAAM,EACb,WAAW,EAAE,KAAM,GAAG,YAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EACxD,YAAY,EAAE,KAAM,IAAI,YAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAC1D,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,eAAe,GAC5B;YACF,oBAAC,yBAAW,CAAC,MAAM,IAAC,KAAK,EAAE,YAAa,EAAE,eAAe,EAAC,MAAM,GAAG,CACzD,CACjB,CAAC;IACN,CAAC;;AAzBL,wBA0BC","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { HandleHtmlProps } from \"./handleProps\";\nimport { ISliderBaseProps, MultiSlider } from \"./multiSlider\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type SliderProps = ISliderProps;\n/** @deprecated use SliderProps */\nexport interface ISliderProps extends ISliderBaseProps {\n    /**\n     * Initial value of the slider. This determines the other end of the\n     * track fill: from `initialValue` to `value`.\n     *\n     * @default 0\n     */\n    initialValue?: number;\n\n    /**\n     * Value of slider.\n     *\n     * @default 0\n     */\n    value?: number;\n\n    /** Callback invoked when the value changes. */\n    onChange?(value: number): void;\n\n    /** Callback invoked when the handle is released. */\n    onRelease?(value: number): void;\n\n    /** A limited subset of HTML props to apply to the slider Handle */\n    handleHtmlProps?: HandleHtmlProps;\n}\n\n/**\n * Slider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/sliders.slider\n */\nexport class Slider extends AbstractPureComponent2<SliderProps> {\n    public static defaultProps: SliderProps = {\n        ...MultiSlider.defaultSliderProps,\n        initialValue: 0,\n        intent: Intent.PRIMARY,\n        value: 0,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Slider`;\n\n    public render() {\n        const { initialValue, intent, value, onChange, onRelease, handleHtmlProps, ...props } = this.props;\n        return (\n            <MultiSlider {...props}>\n                <MultiSlider.Handle\n                    value={value!}\n                    intentAfter={value! < initialValue! ? intent : undefined}\n                    intentBefore={value! >= initialValue! ? intent : undefined}\n                    onChange={onChange}\n                    onRelease={onRelease}\n                    htmlProps={handleHtmlProps}\n                />\n                <MultiSlider.Handle value={initialValue!} interactionKind=\"none\" />\n            </MultiSlider>\n        );\n    }\n}\n"]}
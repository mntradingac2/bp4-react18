{"version":3,"file":"formGroup.js","sourceRoot":"","sources":["../../../../src/components/forms/formGroup.tsx"],"names":[],"mappings":";;;;AAgBA,oEAAoC;AACpC,qDAA+B;AAE/B,yCAA+D;AAC/D,8CAA4E;AA6D5E,MAAa,SAAU,SAAQ,+BAAsC;IAC1D,MAAM,CAAC,WAAW,GAAG,GAAG,0BAAkB,YAAY,CAAC;IAEvD,MAAM;QACT,MAAM,EAAE,QAAQ,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3G,OAAO,CACH,6BAAK,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,KAAK;YAC5C,KAAK,IAAI,CACN,+BAAO,SAAS,EAAE,gBAAO,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ;gBAC7C,KAAK;;gBAAE,8BAAM,SAAS,EAAE,gBAAO,CAAC,UAAU,IAAG,SAAS,CAAQ,CAC3D,CACX;YACA,QAAQ,IAAI,6BAAK,SAAS,EAAE,gBAAO,CAAC,oBAAoB,IAAG,QAAQ,CAAO;YAC3E,6BAAK,SAAS,EAAE,IAAA,oBAAU,EAAC,gBAAO,CAAC,YAAY,EAAE,gBAAgB,CAAC;gBAC7D,QAAQ;gBACR,UAAU,IAAI,6BAAK,SAAS,EAAE,gBAAO,CAAC,gBAAgB,IAAG,UAAU,CAAO,CACzE,CACJ,CACT,CAAC;IACN,CAAC;IAEO,YAAY;QAChB,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3D,OAAO,IAAA,oBAAU,EACb,gBAAO,CAAC,UAAU,EAClB,gBAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAC3B;YACI,CAAC,gBAAO,CAAC,QAAQ,CAAC,EAAE,QAAQ;YAC5B,CAAC,gBAAO,CAAC,MAAM,CAAC,EAAE,MAAM;SAC3B,EACD,SAAS,CACZ,CAAC;IACN,CAAC;;AAhCL,8BAiCC","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, IntentProps, Props } from \"../../common/props\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FormGroupProps = IFormGroupProps;\n/** @deprecated use FormGroupProps */\nexport interface IFormGroupProps extends IntentProps, Props {\n    /** Group contents. */\n    children?: React.ReactNode;\n\n    /**\n     * A space-delimited list of class names to pass along to the\n     * `Classes.FORM_CONTENT` element that contains `children`.\n     */\n    contentClassName?: string;\n\n    /**\n     * Whether form group should appear as non-interactive.\n     * Remember that `input` elements must be disabled separately.\n     */\n    disabled?: boolean;\n\n    /**\n     * Optional helper text. The given content will be wrapped in\n     * `Classes.FORM_HELPER_TEXT` and displayed beneath `children`.\n     * Helper text color is determined by the `intent`.\n     */\n    helperText?: React.ReactNode;\n\n    /** Whether to render the label and children on a single line. */\n    inline?: boolean;\n\n    /** Label of this form group. */\n    label?: React.ReactNode;\n\n    /**\n     * `id` attribute of the labelable form element that this `FormGroup` controls,\n     * used as `<label for>` attribute.\n     */\n    labelFor?: string;\n\n    /**\n     * Optional secondary text that appears after the label.\n     */\n    labelInfo?: React.ReactNode;\n\n    /** CSS properties to apply to the root element. */\n    style?: React.CSSProperties;\n\n    /**\n     * Optional text for `label`. The given content will be wrapped in\n     * `Classes.FORM_GROUP_SUB_LABEL` and displayed beneath `label`. The text color\n     * is determined by the `intent`.\n     */\n    subLabel?: React.ReactNode;\n}\n\n/**\n * Form group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/form-group\n */\nexport class FormGroup extends AbstractPureComponent2<FormGroupProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.FormGroup`;\n\n    public render() {\n        const { children, contentClassName, helperText, label, labelFor, labelInfo, style, subLabel } = this.props;\n        return (\n            <div className={this.getClassName()} style={style}>\n                {label && (\n                    <label className={Classes.LABEL} htmlFor={labelFor}>\n                        {label} <span className={Classes.TEXT_MUTED}>{labelInfo}</span>\n                    </label>\n                )}\n                {subLabel && <div className={Classes.FORM_GROUP_SUB_LABEL}>{subLabel}</div>}\n                <div className={classNames(Classes.FORM_CONTENT, contentClassName)}>\n                    {children}\n                    {helperText && <div className={Classes.FORM_HELPER_TEXT}>{helperText}</div>}\n                </div>\n            </div>\n        );\n    }\n\n    private getClassName() {\n        const { className, disabled, inline, intent } = this.props;\n        return classNames(\n            Classes.FORM_GROUP,\n            Classes.intentClass(intent),\n            {\n                [Classes.DISABLED]: disabled,\n                [Classes.INLINE]: inline,\n            },\n            className,\n        );\n    }\n}\n"]}
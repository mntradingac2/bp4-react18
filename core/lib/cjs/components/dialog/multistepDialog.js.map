{"version":3,"file":"multistepDialog.js","sourceRoot":"","sources":["../../../../src/components/dialog/multistepDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent2, Classes, Position, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clickElementOnKeyPress } from \"../../common/utils\";\nimport { Dialog, DialogProps } from \"./dialog\";\nimport { DialogFooter } from \"./dialogFooter\";\nimport { DialogStep, DialogStepId, DialogStepProps } from \"./dialogStep\";\nimport { DialogStepButton, DialogStepButtonProps } from \"./dialogStepButton\";\n\ntype DialogStepElement = React.ReactElement<DialogStepProps & { children: React.ReactNode }>;\n\nexport type MultistepDialogNavPosition = typeof Position.TOP | typeof Position.LEFT | typeof Position.RIGHT;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type MultistepDialogProps = IMultistepDialogProps;\n/** @deprecated use MultistepDialogProps */\nexport interface IMultistepDialogProps extends DialogProps {\n    /**\n     * Props for the back button.\n     */\n    backButtonProps?: DialogStepButtonProps;\n\n    /** Dialog steps. */\n    children?: React.ReactNode;\n\n    /**\n     * Props for the close button that appears in the footer.\n     */\n    closeButtonProps?: DialogStepButtonProps;\n\n    /**\n     * Props for the button to display on the final step.\n     */\n    finalButtonProps?: DialogStepButtonProps;\n\n    /**\n     * Position of the step navigation within the dialog.\n     *\n     * @default \"left\"\n     */\n    navigationPosition?: MultistepDialogNavPosition;\n\n    /**\n     * Props for the next button.\n     */\n    nextButtonProps?: DialogStepButtonProps;\n\n    /**\n     * A callback that is invoked when the user selects a different step by clicking on back, next, or a step itself.\n     */\n    onChange?(\n        newDialogStepId: DialogStepId,\n        prevDialogStepId: DialogStepId | undefined,\n        event: React.MouseEvent<HTMLElement>,\n    ): void;\n\n    /**\n     * Whether to reset the dialog state to its initial state on close.\n     * By default, closing the dialog will reset its state.\n     *\n     * @default true\n     */\n    resetOnClose?: boolean;\n\n    /**\n     * Whether the footer close button is shown. When this value is true, the button will appear\n     * regardless of the value of `isCloseButtonShown`.\n     *\n     * @default false\n     */\n    showCloseButtonInFooter?: boolean;\n\n    /**\n     * A 0 indexed initial step to start off on, to start in the middle of the dialog, for example.\n     * If the provided index exceeds the number of steps, it defaults to the last step.\n     * If a negative index is provided, it defaults to the first step.\n     */\n    initialStepIndex?: number;\n}\n\ninterface IMultistepDialogState {\n    lastViewedIndex: number;\n    selectedIndex: number;\n}\n\nconst PADDING_BOTTOM = 0;\n\nconst MIN_WIDTH = 800;\n\n/**\n * Multi-step dialog component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog.multistep-dialog\n */\nexport class MultistepDialog extends AbstractPureComponent2<MultistepDialogProps, IMultistepDialogState> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.MultistepDialog`;\n\n    public static defaultProps: Partial<MultistepDialogProps> = {\n        canOutsideClickClose: true,\n        isOpen: false,\n        navigationPosition: \"left\",\n        resetOnClose: true,\n        showCloseButtonInFooter: false,\n    };\n\n    public state: IMultistepDialogState = this.getInitialIndexFromProps(this.props);\n\n    public render() {\n        const { className, navigationPosition, showCloseButtonInFooter, isCloseButtonShown, ...otherProps } =\n            this.props;\n\n        return (\n            <Dialog\n                isCloseButtonShown={isCloseButtonShown}\n                {...otherProps}\n                className={classNames(\n                    {\n                        [Classes.MULTISTEP_DIALOG_NAV_RIGHT]: navigationPosition === \"right\",\n                        [Classes.MULTISTEP_DIALOG_NAV_TOP]: navigationPosition === \"top\",\n                    },\n                    className,\n                )}\n                style={this.getDialogStyle()}\n            >\n                <div className={Classes.MULTISTEP_DIALOG_PANELS}>\n                    {this.renderLeftPanel()}\n                    {this.maybeRenderRightPanel()}\n                </div>\n            </Dialog>\n        );\n    }\n\n    public componentDidUpdate(prevProps: MultistepDialogProps) {\n        if (\n            (prevProps.resetOnClose || prevProps.initialStepIndex !== this.props.initialStepIndex) &&\n            !prevProps.isOpen &&\n            this.props.isOpen\n        ) {\n            this.setState(this.getInitialIndexFromProps(this.props));\n        }\n    }\n\n    private getDialogStyle() {\n        return { minWidth: MIN_WIDTH, paddingBottom: PADDING_BOTTOM, ...this.props.style };\n    }\n\n    private renderLeftPanel() {\n        return (\n            <div className={Classes.MULTISTEP_DIALOG_LEFT_PANEL} role=\"tablist\" aria-label=\"steps\">\n                {this.getDialogStepChildren().filter(isDialogStepElement).map(this.renderDialogStep)}\n            </div>\n        );\n    }\n\n    private renderDialogStep = (step: DialogStepElement, index: number) => {\n        const stepNumber = index + 1;\n        const hasBeenViewed = this.state.lastViewedIndex >= index;\n        const currentlySelected = this.state.selectedIndex === index;\n        const handleClickDialogStep =\n            index > this.state.lastViewedIndex ? undefined : this.getDialogStepChangeHandler(index);\n        return (\n            <div\n                className={classNames(Classes.DIALOG_STEP_CONTAINER, {\n                    [Classes.ACTIVE]: currentlySelected,\n                    [Classes.DIALOG_STEP_VIEWED]: hasBeenViewed,\n                })}\n                key={index}\n                aria-selected={currentlySelected}\n                role=\"tab\"\n            >\n                <div\n                    className={Classes.DIALOG_STEP}\n                    onClick={handleClickDialogStep}\n                    tabIndex={handleClickDialogStep ? 0 : -1}\n                    // enable enter key to take effect on the div as if it were a button\n                    onKeyDown={clickElementOnKeyPress([\"Enter\", \" \"])}\n                >\n                    <div className={Classes.DIALOG_STEP_ICON}>{stepNumber}</div>\n                    <div className={Classes.DIALOG_STEP_TITLE}>{step.props.title}</div>\n                </div>\n            </div>\n        );\n    };\n\n    private maybeRenderRightPanel() {\n        const steps = this.getDialogStepChildren();\n        if (steps.length <= this.state.selectedIndex) {\n            return null;\n        }\n\n        const { className, panel, panelClassName } = steps[this.state.selectedIndex].props;\n        return (\n            <div className={classNames(Classes.MULTISTEP_DIALOG_RIGHT_PANEL, className, panelClassName)}>\n                {panel}\n                {this.renderFooter()}\n            </div>\n        );\n    }\n\n    private renderFooter() {\n        const { closeButtonProps, showCloseButtonInFooter, onClose } = this.props;\n        const maybeCloseButton = !showCloseButtonInFooter ? undefined : (\n            <DialogStepButton text=\"Close\" onClick={onClose} {...closeButtonProps} />\n        );\n        return (\n            // eslint-disable-next-line deprecation/deprecation -- need to keep adding this class for backcompat, can be removed in next major version\n            <DialogFooter className={Classes.MULTISTEP_DIALOG_FOOTER} actions={this.renderButtons()}>\n                {maybeCloseButton}\n            </DialogFooter>\n        );\n    }\n\n    private renderButtons() {\n        const { selectedIndex } = this.state;\n        const steps = this.getDialogStepChildren();\n        const buttons = [] as any;\n\n        if (this.state.selectedIndex > 0) {\n            const backButtonProps = steps[selectedIndex].props.backButtonProps ?? this.props.backButtonProps;\n            buttons.push(\n                <DialogStepButton\n                    key=\"back\"\n                    onClick={this.getDialogStepChangeHandler(selectedIndex - 1)}\n                    text=\"Back\"\n                    {...backButtonProps}\n                />,\n            );\n        }\n\n        if (selectedIndex === this.getDialogStepChildren().length - 1) {\n            buttons.push(\n                <DialogStepButton intent=\"primary\" key=\"final\" text=\"Submit\" {...this.props.finalButtonProps} />,\n            );\n        } else {\n            const nextButtonProps = steps[selectedIndex].props.nextButtonProps ?? this.props.nextButtonProps;\n            buttons.push(\n                <DialogStepButton\n                    intent=\"primary\"\n                    key=\"next\"\n                    onClick={this.getDialogStepChangeHandler(selectedIndex + 1)}\n                    text=\"Next\"\n                    {...nextButtonProps}\n                />,\n            );\n        }\n\n        return buttons;\n    }\n\n    private getDialogStepChangeHandler(index: number) {\n        return (event: React.MouseEvent<HTMLElement>) => {\n            if (this.props.onChange !== undefined) {\n                const steps = this.getDialogStepChildren();\n                const prevStepId = steps[this.state.selectedIndex].props.id;\n                const newStepId = steps[index].props.id;\n                this.props.onChange(newStepId, prevStepId, event);\n            }\n            this.setState({\n                lastViewedIndex: Math.max(this.state.lastViewedIndex, index),\n                selectedIndex: index,\n            });\n        };\n    }\n\n    /** Filters children to only `<DialogStep>`s */\n    private getDialogStepChildren(props: MultistepDialogProps & { children?: React.ReactNode } = this.props) {\n        return React.Children.toArray(props.children).filter(isDialogStepElement);\n    }\n\n    private getInitialIndexFromProps(props: MultistepDialogProps) {\n        if (props.initialStepIndex !== undefined) {\n            const boundedInitialIndex = Math.max(\n                0,\n                Math.min(props.initialStepIndex, this.getDialogStepChildren(props).length - 1),\n            );\n            return {\n                lastViewedIndex: boundedInitialIndex,\n                selectedIndex: boundedInitialIndex,\n            };\n        } else {\n            return {\n                lastViewedIndex: 0,\n                selectedIndex: 0,\n            };\n        }\n    }\n}\n\nfunction isDialogStepElement(child: any): child is DialogStepElement {\n    return Utils.isElementOfType(child, DialogStep);\n}\n"]}
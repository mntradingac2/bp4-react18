{"version":3,"file":"toaster.js","sourceRoot":"","sources":["../../../../src/components/toast/toaster.tsx"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport * as ReactDOM from \"react-dom/client\";\n\nimport { AbstractPureComponent2, Classes, Position } from \"../../common\";\nimport { TOASTER_CREATE_NULL, TOASTER_MAX_TOASTS_INVALID, TOASTER_WARN_INLINE } from \"../../common/errors\";\nimport { ESCAPE } from \"../../common/keys\";\nimport { DISPLAYNAME_PREFIX, Props } from \"../../common/props\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { Overlay } from \"../overlay/overlay\";\nimport { Toast, ToastProps } from \"./toast\";\n\nexport type IToastOptions = ToastProps & { key: string };\nexport type ToasterPosition =\n    | typeof Position.TOP\n    | typeof Position.TOP_LEFT\n    | typeof Position.TOP_RIGHT\n    | typeof Position.BOTTOM\n    | typeof Position.BOTTOM_LEFT\n    | typeof Position.BOTTOM_RIGHT;\n\n/** @deprecated use ToasterInstance */\nexport type IToaster = ToasterInstance;\n\n/** Public API methods available on a `<OverlayToaster>` component instance. */\nexport interface ToasterInstance {\n    /**\n     * Shows a new toast to the user, or updates an existing toast corresponding to the provided key (optional).\n     *\n     * Returns the unique key of the toast.\n     */\n    show(props: ToastProps, key?: string): string;\n\n    /** Dismiss the given toast instantly. */\n    dismiss(key: string): void;\n\n    /** Dismiss all toasts instantly. */\n    clear(): void;\n\n    /** Returns the props for all current toasts. */\n    getToasts(): IToastOptions[];\n}\n\n/**\n * Props supported by the `OverlayToaster` component.\n *\n * These props can be passed as an argument to the static `OverlayToaster.create(props?, container?)` method.\n */\nexport interface OverlayToasterProps extends Props {\n    /**\n     * Whether a toast should acquire application focus when it first opens.\n     * This is disabled by default so that toasts do not interrupt the user's flow.\n     * Note that `enforceFocus` is always disabled for `Toaster`s.\n     *\n     * @default false\n     */\n    autoFocus?: boolean;\n\n    /**\n     * Whether pressing the `esc` key should clear all active toasts.\n     *\n     * @default true\n     */\n    canEscapeKeyClear?: boolean;\n\n    /** Optional toast elements. */\n    children?: React.ReactNode;\n\n    /**\n     * Whether the toaster should be rendered into a new element attached to `document.body`.\n     * If `false`, then positioning will be relative to the parent element.\n     *\n     * This prop is ignored by `OverlayToaster.create()` as that method always appends a new element\n     * to the container.\n     *\n     * @default true\n     */\n    usePortal?: boolean;\n\n    /**\n     * Position of `Toaster` within its container.\n     *\n     * @default Position.TOP\n     */\n    position?: ToasterPosition;\n\n    /**\n     * The maximum number of active toasts that can be displayed at once.\n     *\n     * When the limit is about to be exceeded, the oldest active toast is removed.\n     *\n     * @default undefined\n     */\n    maxToasts?: number;\n}\n\nexport interface IToasterState {\n    toasts: IToastOptions[];\n}\n\n/**\n * Default Toaster component which renders toasts inside an Overlay.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast.toaster\n */\nexport class OverlayToaster\n    extends AbstractPureComponent2<OverlayToasterProps, IToasterState>\n    implements ToasterInstance {\n    public static displayName = `${DISPLAYNAME_PREFIX}.OverlayToaster`;\n\n    public static defaultProps: OverlayToasterProps = {\n        autoFocus: false,\n        canEscapeKeyClear: true,\n        position: Position.TOP,\n        usePortal: true,\n    };\n    declare props: any;\n\n    /**\n     * Create a new `Toaster` instance that can be shared around your application.\n     * The `Toaster` will be rendered into a new element appended to the given container.\n     */\n    public static create(props?: OverlayToasterProps, container = document.body): ToasterInstance {\n        if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n            console.warn(TOASTER_WARN_INLINE);\n        }\n        const containerElement = document.createElement(\"div\");\n        container.appendChild(containerElement);\n        const renderer = ReactDOM.createRoot(containerElement)\n        const toaster = renderer.render(<OverlayToaster {...props} usePortal={false} />) as any;\n        if (toaster == null) {\n            throw new Error(TOASTER_CREATE_NULL);\n        }\n        return toaster;\n    }\n\n    public state: IToasterState = {\n        toasts: [],\n    };\n\n    // auto-incrementing identifier for un-keyed toasts\n    private toastId = 0;\n\n    public show(props: ToastProps, key?: string) {\n        if (this.props.maxToasts) {\n            // check if active number of toasts are at the maxToasts limit\n            this.dismissIfAtLimit();\n        }\n        const options = this.createToastOptions(props, key);\n        if (key === undefined || this.isNewToastKey(key)) {\n            this.setState(prevState => ({\n                toasts: [options, ...prevState.toasts],\n            }));\n        } else {\n            this.setState(prevState => ({\n                toasts: prevState.toasts.map(t => (t.key === key ? options : t)),\n            }));\n        }\n        return options.key;\n    }\n    setState(arg0: (prevState: any) => { toasts: any[]; }) {\n        arg0\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public dismiss(key: string, timeoutExpired = false) {\n        this.setState(({ toasts }) => ({\n            toasts: toasts.filter(t => {\n                const matchesKey = t.key === key;\n                if (matchesKey) {\n                    t.onDismiss?.(timeoutExpired);\n                }\n                return !matchesKey;\n            }),\n        }));\n    }\n\n    public clear() {\n        this.state.toasts.forEach(t => t.onDismiss?.(false));\n        this.setState({ toasts: [] } as any);\n    }\n\n    public getToasts() {\n        return this.state.toasts;\n    }\n\n    public render() {\n        const classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n        return (\n            <Overlay\n                autoFocus={this.props.autoFocus}\n                canEscapeKeyClose={this.props.canEscapeKeyClear}\n                canOutsideClickClose={false}\n                className={classes}\n                enforceFocus={false}\n                hasBackdrop={false}\n                isOpen={this.state.toasts.length > 0 || this.props.children != null}\n                onClose={this.handleClose}\n                shouldReturnFocusOnClose={false}\n                // $pt-transition-duration * 3 + $pt-transition-duration / 2\n                transitionDuration={350}\n                transitionName={Classes.TOAST}\n                usePortal={this.props.usePortal}\n            >\n                {this.state.toasts.map(this.renderToast, this)}\n                {this.props.children}\n            </Overlay>\n        );\n    }\n\n    protected validateProps({ maxToasts }: OverlayToasterProps) {\n        // maximum number of toasts should not be a number less than 1\n        if (maxToasts !== undefined && maxToasts < 1) {\n            throw new Error(TOASTER_MAX_TOASTS_INVALID);\n        }\n    }\n\n    private isNewToastKey(key: string) {\n        return this.state.toasts.every(toast => toast.key !== key);\n    }\n\n    private dismissIfAtLimit() {\n        if (this.state.toasts.length === this.props.maxToasts) {\n            // dismiss the oldest toast to stay within the maxToasts limit\n            this.dismiss(this.state.toasts[this.state.toasts.length - 1].key!);\n        }\n    }\n\n    private renderToast = (toast: IToastOptions) => {\n        return <Toast {...toast} onDismiss={this.getDismissHandler(toast)} />;\n    };\n\n    private createToastOptions(props: ToastProps, key = `toast-${this.toastId++}`) {\n        // clone the object before adding the key prop to avoid leaking the mutation\n        return { ...props, key };\n    }\n\n    private getPositionClasses() {\n        const positions = this.props.position!.split(\"-\");\n        // NOTE that there is no -center class because that's the default style\n        return [\n            ...positions.map(p => `${Classes.TOAST_CONTAINER}-${p.toLowerCase()}`),\n            `${Classes.TOAST_CONTAINER}-${this.props.usePortal ? \"in-portal\" : \"inline\"}`,\n        ];\n    }\n\n    private getDismissHandler = (toast: IToastOptions) => (timeoutExpired: boolean) => {\n        this.dismiss(toast.key, timeoutExpired);\n    };\n\n    private handleClose = (e: React.SyntheticEvent<HTMLElement>) => {\n        // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n        // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n        /* eslint-disable-next-line deprecation/deprecation */\n        if ((e as React.KeyboardEvent<HTMLElement>).which === ESCAPE) {\n            this.clear();\n        }\n    };\n}\n\n/** @deprecated use the new, more specific component name `OverlayToaster` instead (forwards-compatible with v5) */\nexport const Toaster = OverlayToaster;\n/** @deprecated use the new, more specific type `ToasterInstance` instead (forwards-compatible with v5) */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type Toaster = OverlayToaster;\n/** @deprecated use `OverlayToasterProps` instead */\nexport type IToasterProps = OverlayToasterProps;\n"]}
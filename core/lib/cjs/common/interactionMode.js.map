{"version":3,"file":"interactionMode.js","sourceRoot":"","sources":["../../../src/common/interactionMode.ts"],"names":[],"mappings":";;;AAuBA,MAAa,qBAAqB;IAGV;IAAgC;IAF5C,SAAS,GAAG,KAAK,CAAC;IAE1B,YAAoB,SAAsB,EAAU,SAAiB;QAAjD,cAAS,GAAT,SAAS,CAAa;QAAU,cAAS,GAAT,SAAS,CAAQ;IAAG,CAAC;IAGlE,QAAQ;QACX,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAGM,KAAK;QACR,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAGM,IAAI;QACP,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEO,KAAK;QACT,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC1E,CAAC;IAEO,aAAa,GAAG,CAAC,CAAgB,EAAE,EAAE;QACzC,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK,EAAE;YACjB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SACtE;IACL,CAAC,CAAC;IAEM,eAAe,GAAG,GAAG,EAAE;QAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACnE,CAAC,CAAC;CACL;AAxCD,sDAwCC","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* istanbul ignore next */\n\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\nexport class InteractionModeEngine {\n    private isRunning = false;\n\n    constructor(private container: HTMLElement, private className: string) {}\n\n    /** Returns whether the engine is currently running. */\n    public isActive() {\n        return this.isRunning;\n    }\n\n    /** Enable behavior which applies the given className when in mouse mode. */\n    public start() {\n        this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        this.isRunning = true;\n    }\n\n    /** Disable interaction mode behavior and remove className from container. */\n    public stop() {\n        this.reset();\n        this.isRunning = false;\n    }\n\n    private reset() {\n        this.container.classList.remove(this.className);\n        this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n        this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n    }\n\n    private handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === \"Tab\") {\n            this.reset();\n            this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        }\n    };\n\n    private handleMouseDown = () => {\n        this.reset();\n        this.container.classList.add(this.className);\n        this.container.addEventListener(\"keydown\", this.handleKeyDown);\n    };\n}\n"]}
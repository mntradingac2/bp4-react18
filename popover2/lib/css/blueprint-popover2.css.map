{"version":3,"sources":["blueprint-popover2.css"],"names":[],"mappings":"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;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;;EAEE,gCAAiC;EACjC,wDAAiD;UAAjD,gDAAiD;EACjD,aAAc;AAChB;AACA;;EAEE,aAAc;AAChB;AACA;;EAEE,gCAAiC;EACjC,wDAAiD;UAAjD,gDAAiD;EACjD,aAAc;AAChB;AACA;;EAEE,eAAgB;EAChB,uBAAgB;UAAhB,eAAgB;EAChB,aAAc;AAChB;AACA;;EAEE,kBAAmB;EACnB,8FAAuF;UAAvF,sFAAuF;EACvF,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,iBAAkB;AACpB;AACA;EACE,gBAAiB;EACjB,eAAgB;AAClB;AACA;EACE,0BAA2B;AAC7B;AACA;EACE,kCAA2B;UAA3B,0BAA2B;AAC7B;AACA;EACE,kCAA2B;UAA3B,0BAA2B;AAC7B;AACA;EACE,iCAA0B;UAA1B,yBAA0B;AAC5B;AACA;EACE,iCAA0B;UAA1B,yBAA0B;AAC5B;AACA;EACE,oFAA6E;UAA7E,4EAA6E;AAC/E;AACA;EACE,kBAAmB;AACrB;AACA;;;EAGE,aAAc;AAChB;AACA;EACE,oDAA6C;UAA7C,4CAA6C;AAC/C;AACA;EACE,YAAa;EACb,gBAAiB;AACnB;AACA;EACE,YAAa;AACf;AACA;EACE;IACE,iBAAkB;EACpB;AACF;AACA;EACE;IACE,6BAA8B;EAChC;AACF;AACA;EACE,aAAc;AAChB;AACA;EACE,6BAA8B;AAChC;AACA;EACE,mCAAoC;AACtC;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;;;EAGE,mCAAoC;EACpC,wDAAiD;UAAjD,gDAAiD;EACjD,aAAc;AAChB;AACA;;;EAGE,aAAc;AAChB;AACA;;;EAGE,mCAAoC;EACpC,yDAAkD;UAAlD,iDAAkD;EAClD,aAAc;AAChB;AACA;;;EAGE,eAAgB;EAChB,uBAAgB;UAAhB,eAAgB;EAChB,aAAc;AAChB;AACA;EACE;;;IAGE,6BAA8B;IAC9B,uBAAgB;YAAhB,eAAgB;EAClB;AACF;AACA;;;EAGE,kBAAmB;EACnB,mFAA4E;UAA5E,2EAA4E;EAC5E,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,aAAc;AAChB;AACA;EACE,kBAAmB;EACnB,aAAc;AAChB;AACA;EACE,YAAa;AACf;AACA;EACE,kBAAmB;EACnB,aAAc;AAChB;AACA;EACE,YAAa;AACf;AACA;EACE,kBAAmB;EACnB,aAAc;AAChB;AACA;EACE,YAAa;AACf;AACA;EACE,kBAAmB;EACnB,aAAc;AAChB;AACA;EACE,YAAa;AACf;;AAEA;EACE,wBAAyB;EACzB,WAAY;AACd","file":"blueprint-popover2.css","sourcesContent":["/*\n\nCopyright 2021-present Palantir Technologies, Inc. All rights reserved.\nLicensed under the Apache License, Version 2.0.\n\n*/\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-context-menu2-virtual-target {\n  position: fixed;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-popover2 {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n  transform: scale(1);\n  border-radius: 2px;\n  display: inline-block;\n  z-index: 20;\n}\n.bp4-popover2 .bp4-popover2-arrow {\n  height: 30px;\n  position: absolute;\n  width: 30px;\n}\n.bp4-popover2 .bp4-popover2-arrow::before {\n  height: 20px;\n  margin: 5px;\n  width: 20px;\n}\n.bp4-popover2 .bp4-popover2-content {\n  background: #ffffff;\n}\n.bp4-popover2 .bp4-popover2-content,\n.bp4-popover2 .bp4-heading {\n  color: inherit;\n}\n.bp4-popover2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.2);\n}\n.bp4-popover2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.1;\n}\n.bp4-popover2 .bp4-popover2-arrow-fill {\n  fill: #ffffff;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2 {\n    border: 1px solid buttonborder;\n  }\n}\n.bp4-popover2-enter > .bp4-popover2, .bp4-popover2-appear > .bp4-popover2 {\n  transform: scale(0.3);\n}\n.bp4-popover2-enter-active > .bp4-popover2, .bp4-popover2-appear-active > .bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 300ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);\n}\n.bp4-popover2-exit > .bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-popover2 {\n  transform: scale(0.3);\n  transition-delay: 0;\n  transition-duration: 300ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);\n}\n.bp4-popover2 .bp4-popover2-content {\n  border-radius: 2px;\n  position: relative;\n}\n.bp4-popover2.bp4-popover2-content-sizing .bp4-popover2-content {\n  max-width: 350px;\n  padding: 20px;\n}\n.bp4-popover2-target + .bp4-overlay .bp4-popover2.bp4-popover2-content-sizing {\n  width: 350px;\n}\n.bp4-popover2.bp4-minimal {\n  margin: 0 !important; /* stylelint-disable-line declaration-no-important */\n}\n.bp4-popover2.bp4-minimal .bp4-popover2-arrow {\n  display: none;\n}\n.bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-enter > .bp4-popover2.bp4-minimal.bp4-popover2, .bp4-popover2-appear > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-enter-active > .bp4-popover2.bp4-minimal.bp4-popover2, .bp4-popover2-appear-active > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-exit > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-popover2.bp4-minimal.bp4-popover2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2.bp4-popover2-match-target-width {\n  width: 100%;\n}\n.bp4-popover2.bp4-dark, .bp4-dark .bp4-popover2 {\n  box-shadow: 0 0 0 1px hsl(215, 3%, 38%), inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n.bp4-popover2.bp4-dark .bp4-popover2-content, .bp4-dark .bp4-popover2 .bp4-popover2-content {\n  background: #2f343c;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-content,\n.bp4-popover2.bp4-dark .bp4-heading, .bp4-dark .bp4-popover2 .bp4-popover2-content,\n.bp4-dark .bp4-popover2 .bp4-heading {\n  color: inherit;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow::before, .bp4-dark .bp4-popover2 .bp4-popover2-arrow::before {\n  box-shadow: 0 0 0 1px #777a7e, 1px 1px 6px rgba(17, 20, 24, 0.4);\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow-border, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.2;\n}\n.bp4-popover2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-fill {\n  fill: #2f343c;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-popover2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-popover2.bp4-dark, .bp4-dark .bp4-popover2 {\n    border: 1px solid buttonborder;\n  }\n}\n\n.bp4-popover2-arrow::before {\n  border-radius: 1px;\n  content: \"\";\n  display: block;\n  position: absolute;\n  transform: rotate(45deg);\n}\n\n.bp4-overlay-backdrop.bp4-popover2-backdrop {\n  background: rgba(255, 255, 255, 0);\n}\n\n.bp4-popover2-transition-container {\n  opacity: 1;\n  display: flex;\n  z-index: 20;\n}\n.bp4-popover2-transition-container.bp4-popover2-enter, .bp4-popover2-transition-container.bp4-popover2-appear {\n  opacity: 0;\n}\n.bp4-popover2-transition-container.bp4-popover2-enter-active, .bp4-popover2-transition-container.bp4-popover2-appear-active {\n  opacity: 1;\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-transition-container.bp4-popover2-exit {\n  opacity: 1;\n}\n.bp4-popover2-transition-container.bp4-popover2-exit-active {\n  opacity: 0;\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: opacity;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-transition-container:focus {\n  outline: none;\n}\n.bp4-popover2-transition-container.bp4-popover2-leave .bp4-popover2-content {\n  pointer-events: none;\n}\n\nspan.bp4-popover2-target {\n  display: inline-block;\n}\n\n.bp4-popover2-target.bp4-fill {\n  width: 100%;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nCSS `border` property issues:\n- An element can only have one border.\n- Borders can't stack with shadows.\n- Borders modify the size of the element they're applied to.\n- Border positioning requires the extra `box-sizing` property.\n\n`box-shadow` doesn't have these issues, we're using it instead of `border`.\n*/\n.bp4-button-group:not(.bp4-minimal) > .bp4-popover2-target:not(:first-child) .bp4-button {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n.bp4-button-group:not(.bp4-minimal) > .bp4-popover2-target:not(:last-child) .bp4-button {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n  margin-right: -1px;\n}\n.bp4-button-group .bp4-popover2-target {\n  display: flex;\n  flex: 1 1 auto;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:first-child .bp4-button {\n  border-radius: 2px 2px 0 0;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:last-child .bp4-button {\n  border-radius: 0 0 2px 2px;\n}\n.bp4-button-group.bp4-vertical:not(.bp4-minimal) > .bp4-popover2-target:not(:last-child) .bp4-button {\n  margin-bottom: -1px;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-control-group .bp4-popover2-target {\n  border-radius: inherit;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\nlabel.bp4-label .bp4-popover2-target {\n  display: block;\n  margin-top: 5px;\n  text-transform: none;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n.bp4-submenu .bp4-popover2-target {\n  display: block;\n}\n.bp4-submenu.bp4-popover2 {\n  box-shadow: none;\n  padding: 0 5px;\n}\n.bp4-submenu.bp4-popover2 > .bp4-popover2-content {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n}\n.bp4-dark .bp4-submenu.bp4-popover2, .bp4-submenu.bp4-popover2.bp4-dark {\n  box-shadow: none;\n}\n.bp4-dark .bp4-submenu.bp4-popover2 > .bp4-popover2-content, .bp4-submenu.bp4-popover2.bp4-dark > .bp4-popover2-content {\n  box-shadow: 0 0 0 1px hsl(215, 3%, 38%), inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-tree-node-secondary-label .bp4-popover2-target {\n  align-items: center;\n  display: flex;\n}\n\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n */\n/*\nA mixin to generate the classes for a React CSSTransition which animates any number of CSS\nproperties at once.\n\nTransitioned properties are specificed as a map of property names to lists of (inital value, final\nvalue). For enter & appear transitions, each property will transition from its initial to its final\nvalue. For exit transitions, each property will transition in reverse, from final to initial.\n\n**Simple example:**\n`@include react-transition(\"popover\", (opacity: 0 1), $before: \"&\");`\nTransition named \"popover\" moves opacity from 0 to 1. `\"&\"` indicates that the\nTransition classes are expected to be applied to this element, where the mixin is invoked.\n\n**Params:**\n$name: React transitionName prop\n$properties: map of CSS property to (initial, final) values\n$duration: transition duration\n$easing: transition easing function\n$delay: transition delay\n$before: selector text to insert before transition name (often to select self: &)\n$after: selector text to insert after transiton name (to select children)\n*/\n/*\nA mixin to generate the classes for one phase of a React CSSTransition.\n`$phase` must be `appear` or `enter` or `exit`.\nIf `enter` phase is given then `appear` phase will be generated at the same time.\nIf `exit` phase is given then property values are animated in reverse, from final to initial.\n\n**Example:**\n@include react-transition-phase(toast, enter, $enter-translate, $before: \"&\");\n@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: \"&\");\n*/\n/*\nGiven map of properties to values, set each property to the value at the given index.\n(remember that sass indices are 1-based).\n\nExample: `each-prop((opacity: 0 1), 2)` will print \"opacity: 1\"\n*/\n/*\nFormat transition class name with all the bits.\n\"enter\" phase will include \"appear\" phase in returned name.\n*/\n.bp4-tooltip2 {\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 2px 4px rgba(17, 20, 24, 0.2), 0 8px 24px rgba(17, 20, 24, 0.2);\n  transform: scale(1);\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-popover2-arrow {\n  height: 22px;\n  position: absolute;\n  width: 22px;\n}\n.bp4-tooltip2 .bp4-popover2-arrow::before {\n  height: 14px;\n  margin: 4px;\n  width: 14px;\n}\n.bp4-tooltip2 .bp4-popover2-content {\n  background: #404854;\n}\n.bp4-tooltip2 .bp4-popover2-content,\n.bp4-tooltip2 .bp4-heading {\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.2);\n}\n.bp4-tooltip2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.1;\n}\n.bp4-tooltip2 .bp4-popover2-arrow-fill {\n  fill: #404854;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2 {\n    border: 1px solid buttonborder;\n  }\n}\n.bp4-popover2-enter > .bp4-tooltip2, .bp4-popover2-appear > .bp4-tooltip2 {\n  transform: scale(0.8);\n}\n.bp4-popover2-enter-active > .bp4-tooltip2, .bp4-popover2-appear-active > .bp4-tooltip2 {\n  transform: scale(1);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-popover2-exit > .bp4-tooltip2 {\n  transform: scale(1);\n}\n.bp4-popover2-exit-active > .bp4-tooltip2 {\n  transform: scale(0.8);\n  transition-delay: 0;\n  transition-duration: 100ms;\n  transition-property: transform;\n  /* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */\n  transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);\n}\n.bp4-tooltip2 .bp4-text-muted {\n  color: #abb3bf;\n}\n.bp4-tooltip2 .bp4-text-disabled {\n  color: rgba(171, 179, 191, 0.6);\n}\n.bp4-tooltip2 .bp4-running-text hr {\n  border-color: rgba(255, 255, 255, 0.2);\n}\n.bp4-tooltip2 a {\n  color: #8abbff;\n}\n.bp4-tooltip2 a:hover {\n  color: #8abbff;\n}\n.bp4-tooltip2 a .bp4-icon, .bp4-tooltip2 a .bp4-icon-standard, .bp4-tooltip2 a .bp4-icon-large {\n  color: inherit;\n}\n.bp4-tooltip2 a code {\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-code,\n.bp4-tooltip2 .bp4-running-text code {\n  background: rgba(17, 20, 24, 0.3);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.4);\n  color: #abb3bf;\n}\na > .bp4-tooltip2 .bp4-code,\na > .bp4-tooltip2 .bp4-running-text code {\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-code-block,\n.bp4-tooltip2 .bp4-running-text pre {\n  background: rgba(17, 20, 24, 0.3);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.4);\n  color: #f6f7f9;\n}\n.bp4-tooltip2 .bp4-code-block > code,\n.bp4-tooltip2 .bp4-running-text pre > code {\n  background: none;\n  box-shadow: none;\n  color: inherit;\n}\n.bp4-tooltip2 .bp4-key,\n.bp4-tooltip2 .bp4-running-text kbd {\n  background: #383e47;\n  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.2), 0 1px 1px 0 rgba(17, 20, 24, 0.4);\n  color: #abb3bf;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-primary, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-primary, .bp4-tooltip2 .bp4-icon-large.bp4-intent-primary {\n  color: #8abbff;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-success, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-success, .bp4-tooltip2 .bp4-icon-large.bp4-intent-success {\n  color: #72ca9b;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-warning, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-warning, .bp4-tooltip2 .bp4-icon-large.bp4-intent-warning {\n  color: #fbb360;\n}\n.bp4-tooltip2 .bp4-icon.bp4-intent-danger, .bp4-tooltip2 .bp4-icon-standard.bp4-intent-danger, .bp4-tooltip2 .bp4-icon-large.bp4-intent-danger {\n  color: #fa999c;\n}\n.bp4-tooltip2 .bp4-popover2-content {\n  padding: 10px 12px;\n}\n.bp4-tooltip2.bp4-compact .bp4-popover2-content {\n  line-height: 1rem;\n  padding: 5px 7px;\n}\n.bp4-tooltip2.bp4-compact .bp4-code {\n  vertical-align: text-bottom;\n}\n.bp4-tooltip2.bp4-popover2-placement-top .bp4-popover2-arrow {\n  transform: translateY(-3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-left .bp4-popover2-arrow {\n  transform: translateX(-3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-bottom .bp4-popover2-arrow {\n  transform: translateY(3px);\n}\n.bp4-tooltip2.bp4-popover2-placement-right .bp4-popover2-arrow {\n  transform: translateX(3px);\n}\n.bp4-tooltip2.bp4-dark, .bp4-dark .bp4-tooltip2 {\n  box-shadow: 0 2px 4px rgba(17, 20, 24, 0.4), 0 8px 24px rgba(17, 20, 24, 0.4);\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-content, .bp4-dark .bp4-tooltip2 .bp4-popover2-content {\n  background: #e5e8eb;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-content,\n.bp4-tooltip2.bp4-dark .bp4-heading, .bp4-dark .bp4-tooltip2 .bp4-popover2-content,\n.bp4-dark .bp4-tooltip2 .bp4-heading {\n  color: #404854;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow::before, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow::before {\n  box-shadow: 1px 1px 6px rgba(17, 20, 24, 0.4);\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow-border, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-border {\n  fill: #111418;\n  fill-opacity: 0.2;\n}\n.bp4-tooltip2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-fill {\n  fill: #e5e8eb;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2.bp4-dark .bp4-popover2-arrow-fill, .bp4-dark .bp4-tooltip2 .bp4-popover2-arrow-fill {\n    fill: buttonborder;\n  }\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2.bp4-dark, .bp4-dark .bp4-tooltip2 {\n    border: 1px solid buttonborder;\n  }\n}\n.bp4-tooltip2.bp4-dark .bp4-text-muted, .bp4-dark .bp4-tooltip2 .bp4-text-muted {\n  color: #5f6b7c;\n}\n.bp4-tooltip2.bp4-dark .bp4-text-disabled, .bp4-dark .bp4-tooltip2 .bp4-text-disabled {\n  color: rgba(95, 107, 124, 0.6);\n}\n.bp4-tooltip2.bp4-dark .bp4-running-text hr, .bp4-dark .bp4-tooltip2 .bp4-running-text hr {\n  border-color: rgba(17, 20, 24, 0.15);\n}\n.bp4-tooltip2.bp4-dark a, .bp4-dark .bp4-tooltip2 a {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark a:hover, .bp4-dark .bp4-tooltip2 a:hover {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark a .bp4-icon, .bp4-tooltip2.bp4-dark a .bp4-icon-standard, .bp4-tooltip2.bp4-dark a .bp4-icon-large, .bp4-dark .bp4-tooltip2 a .bp4-icon, .bp4-dark .bp4-tooltip2 a .bp4-icon-standard, .bp4-dark .bp4-tooltip2 a .bp4-icon-large {\n  color: inherit;\n}\n.bp4-tooltip2.bp4-dark a code, .bp4-dark .bp4-tooltip2 a code {\n  color: inherit;\n}\n.bp4-tooltip2.bp4-dark .bp4-code,\n.bp4-tooltip2.bp4-dark .bp4-running-text code, .bp4-dark .bp4-tooltip2 .bp4-code,\n.bp4-dark .bp4-tooltip2 .bp4-running-text code {\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.2);\n  color: #5f6b7c;\n}\na > .bp4-tooltip2.bp4-dark .bp4-code,\na > .bp4-tooltip2.bp4-dark .bp4-running-text code, a > .bp4-dark .bp4-tooltip2 .bp4-code,\na > .bp4-dark .bp4-tooltip2 .bp4-running-text code {\n  color: #2d72d2;\n}\n.bp4-tooltip2.bp4-dark .bp4-code-block,\n.bp4-tooltip2.bp4-dark .bp4-running-text pre, .bp4-dark .bp4-tooltip2 .bp4-code-block,\n.bp4-dark .bp4-tooltip2 .bp4-running-text pre {\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: inset 0 0 0 1px rgba(17, 20, 24, 0.15);\n  color: #1c2127;\n}\n.bp4-tooltip2.bp4-dark .bp4-code-block > code,\n.bp4-tooltip2.bp4-dark .bp4-running-text pre > code, .bp4-dark .bp4-tooltip2 .bp4-code-block > code,\n.bp4-dark .bp4-tooltip2 .bp4-running-text pre > code {\n  background: none;\n  box-shadow: none;\n  color: inherit;\n}\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .bp4-tooltip2.bp4-dark .bp4-code-block,\n  .bp4-tooltip2.bp4-dark .bp4-running-text pre, .bp4-dark .bp4-tooltip2 .bp4-code-block,\n  .bp4-dark .bp4-tooltip2 .bp4-running-text pre {\n    border: 1px solid buttonborder;\n    box-shadow: none;\n  }\n}\n.bp4-tooltip2.bp4-dark .bp4-key,\n.bp4-tooltip2.bp4-dark .bp4-running-text kbd, .bp4-dark .bp4-tooltip2 .bp4-key,\n.bp4-dark .bp4-tooltip2 .bp4-running-text kbd {\n  background: #ffffff;\n  box-shadow: 0 0 0 1px rgba(17, 20, 24, 0.1), 0 1px 1px rgba(17, 20, 24, 0.2);\n  color: #5f6b7c;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-primary, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-primary, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-primary, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-primary {\n  color: #215db0;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-success, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-success, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-success, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-success {\n  color: #1c6e42;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-warning, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-warning, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-warning, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-warning {\n  color: #935610;\n}\n.bp4-tooltip2.bp4-dark .bp4-icon.bp4-intent-danger, .bp4-tooltip2.bp4-dark .bp4-icon-standard.bp4-intent-danger, .bp4-tooltip2.bp4-dark .bp4-icon-large.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon-standard.bp4-intent-danger, .bp4-dark .bp4-tooltip2 .bp4-icon-large.bp4-intent-danger {\n  color: #ac2f33;\n}\n.bp4-tooltip2.bp4-intent-primary .bp4-popover2-content {\n  background: #2d72d2;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-primary .bp4-popover2-arrow-fill {\n  fill: #2d72d2;\n}\n.bp4-tooltip2.bp4-intent-success .bp4-popover2-content {\n  background: #238551;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-success .bp4-popover2-arrow-fill {\n  fill: #238551;\n}\n.bp4-tooltip2.bp4-intent-warning .bp4-popover2-content {\n  background: #c87619;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-warning .bp4-popover2-arrow-fill {\n  fill: #c87619;\n}\n.bp4-tooltip2.bp4-intent-danger .bp4-popover2-content {\n  background: #cd4246;\n  color: #ffffff;\n}\n.bp4-tooltip2.bp4-intent-danger .bp4-popover2-arrow-fill {\n  fill: #cd4246;\n}\n\n.bp4-tooltip2-indicator {\n  border-bottom: dotted 1px;\n  cursor: help;\n}"]}